imports:
  unstableRoot: __package__.yml
types:
  Macro:
    docs: >-
      A macro is a pre-defined response template (saved reply) that can be used
      to quickly reply to conversations.
    properties:
      available_on:
        docs: Where the macro is available for use.
        type: optional<list<MacroAvailableOnItem>>
      body:
        docs: >-
          The body of the macro in HTML format with placeholders transformed to
          XML-like format.
        type: optional<string>
      body_text:
        docs: >-
          The plain text version of the macro body with original Intercom
          placeholder format.
        type: optional<string>
      created_at:
        docs: The time the macro was created in ISO 8601 format.
        type: optional<datetime>
      id:
        docs: The unique identifier for the macro.
        type: optional<string>
      name:
        docs: The name of the macro.
        type: optional<string>
      type:
        docs: String representing the object's type. Always has the value `macro`.
        type: optional<literal<"macro">>
      updated_at:
        docs: The time the macro was last updated in ISO 8601 format.
        type: optional<datetime>
      visible_to:
        docs: Who can view this macro.
        type: optional<MacroVisibleTo>
      visible_to_team_ids:
        docs: >-
          The team IDs that can view this macro when visible_to is set to
          specific_teams.
        type: optional<list<string>>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MacroAvailableOnItem:
    enum:
      - inbox
      - messenger
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MacroList:
    docs: A paginated list of macros (saved replies) in the workspace.
    properties:
      data:
        docs: The list of macro objects
        type: optional<list<optional<Macro>>>
      pages:
        docs: Pagination information
        type: optional<MacroListPages>
      type:
        docs: Always list
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MacroListPages:
    docs: Pagination information
    inline: true
    properties:
      next:
        docs: Cursor for the next page
        type: optional<MacroListPagesNext>
      per_page:
        docs: Number of results per page
        type: optional<integer>
      type:
        docs: The type of pagination
        type: optional<literal<"pages">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MacroListPagesNext:
    docs: Cursor for the next page
    inline: true
    properties:
      starting_after:
        docs: Base64-encoded cursor containing [updated_at, id] for pagination
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MacroVisibleTo:
    docs: Who can view this macro.
    enum:
      - everyone
      - specific_teams
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
docs: Operations related to saved replies (macros) in conversations
service:
  auth: false
  base-path: ''
  display-name: Macros
  endpoints:
    getMacro:
      auth: true
      display-name: Retrieve a macro
      docs: >
        You can fetch a single macro (saved reply) by its ID. The macro will
        only be returned if it is visible to the authenticated user based on its
        visibility settings.


        **Visibility Rules**


        A macro is returned based on its `visible_to` setting:

        - `everyone`: Always visible to all team members

        - `specific_teams`: Only visible if the authenticated user belongs to
        one of the teams specified in `visible_to_team_ids`


        If a macro exists but is not visible to the authenticated user, a 404
        error is returned.


        **Placeholder Transformation**


        The API transforms Intercom placeholders to a more standard XML-like
        format in the `body` field:

        - From: `{{user.name | fallback: 'there'}}`

        - To: `<attribute key="user.name" default="there"/>`


        Default values in placeholders are HTML-escaped for security.
      errors:
        - unstableRoot.UnauthorizedError
        - unstableRoot.ForbiddenError
        - unstableRoot.NotFoundError
      examples:
        - code-samples:
            - code: |
                curl -X GET 'https://api.intercom.io/macros/123' \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros/123', {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macro = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                response = requests.get('https://api.intercom.io/macros/123',
                                      headers=headers)
                macro = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros/123')

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macro = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Customer support macro with placeholders
          path-parameters:
            id: '123'
          response:
            body:
              available_on:
                - inbox
                - messenger
              body: >-
                <p>Hi <attribute key="user.first_name"
                default="there"/>,</p><p>I understand you'd like a refund for
                order #<attribute
                key="conversation.custom_attributes.order_number"/>. The refund
                will be processed within 3-5 business days to your <attribute
                key="user.custom_attributes.payment_method" default="original
                payment method"/>.</p><p>Is there anything else I can help you
                with?</p>
              body_text: >-
                Hi {{user.first_name|fallback:"there"}},


                I understand you'd like a refund for order
                #{{conversation.custom_attributes.order_number}}. The refund
                will be processed within 3-5 business days to your
                {{user.custom_attributes.payment_method|fallback:"original
                payment method"}}.


                Is there anything else I can help you with?
              created_at: '2025-07-21T14:44:35Z'
              id: '789'
              name: Refund Process Explanation
              type: macro
              updated_at: '2025-07-21T14:44:35Z'
              visible_to: specific_teams
              visible_to_team_ids:
                - support_team_1
                - support_team_2
        - code-samples:
            - code: |
                curl -X GET 'https://api.intercom.io/macros/123' \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros/123', {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macro = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                response = requests.get('https://api.intercom.io/macros/123',
                                      headers=headers)
                macro = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros/123')

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macro = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Sales team macro for product inquiries
          path-parameters:
            id: '123'
          response:
            body:
              available_on:
                - messenger
              body: >-
                <p>Hello <attribute key="user.name" default="valued
                customer"/>,</p><p>Thank you for your interest in <attribute
                key="product.name" default="our products"/>! I'd love to
                schedule a personalized demo for your team at <attribute
                key="company.name" default="your company"/>.</p><p>Would
                <attribute key="suggested_time" default="next Tuesday at 2 PM
                EST"/> work for you?</p>
              body_text: >-
                Hello {{user.name|fallback:"valued customer"}},


                Thank you for your interest in {{product.name|fallback:"our
                products"}}! I'd love to schedule a personalized demo for your
                team at {{company.name|fallback:"your company"}}.


                Would {{suggested_time|fallback:"next Tuesday at 2 PM EST"}}
                work for you?
              created_at: '2025-07-22T11:06:40Z'
              id: '456'
              name: Product Demo Request
              type: macro
              updated_at: '2025-07-23T00:00:00Z'
              visible_to: specific_teams
              visible_to_team_ids:
                - sales_team_us
                - sales_team_eu
        - code-samples:
            - code: |
                curl -X GET 'https://api.intercom.io/macros/123' \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros/123', {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macro = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                response = requests.get('https://api.intercom.io/macros/123',
                                      headers=headers)
                macro = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros/123')

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macro = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Technical support macro with nested attributes
          path-parameters:
            id: '123'
          response:
            body:
              available_on:
                - inbox
              body: >-
                <p>Hi <attribute key="user.name"/>,</p><p>I see you're having
                trouble with the <attribute
                key="conversation.custom_attributes.api_endpoint"
                default="API"/> integration. Your API key for app <attribute
                key="app.id"/> is configured correctly.</p><p>Error code:
                <attribute key="conversation.custom_attributes.error_code"
                default="unknown"/></p><p>Let me help you resolve this
                issue.</p>
              body_text: >-
                Hi {{user.name}},


                I see you're having trouble with the
                {{conversation.custom_attributes.api_endpoint|fallback:"API"}}
                integration. Your API key for app {{app.id}} is configured
                correctly.


                Error code:
                {{conversation.custom_attributes.error_code|fallback:"unknown"}}


                Let me help you resolve this issue.
              created_at: '2025-07-18T09:15:00Z'
              id: '890'
              name: API Integration Help
              type: macro
              updated_at: '2025-07-18T09:15:00Z'
              visible_to: everyone
              visible_to_team_ids:
                - '456'
                - '789'
        - code-samples:
            - code: |
                curl -X GET 'https://api.intercom.io/macros/123' \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros/123', {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macro = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                response = requests.get('https://api.intercom.io/macros/123',
                                      headers=headers)
                macro = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros/123')

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macro = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Simple macro without placeholders
          path-parameters:
            id: '123'
          response:
            body:
              available_on:
                - inbox
                - messenger
              body: >-
                <p>Thank you for reaching out! We appreciate your message and
                will get back to you as soon as possible.</p>
              body_text: >-
                Thank you for reaching out! We appreciate your message and will
                get back to you as soon as possible.
              created_at: '2025-07-17T11:18:08Z'
              id: '123'
              name: Thank You Response
              type: macro
              updated_at: '2025-07-17T15:30:24Z'
              visible_to: everyone
              visible_to_team_ids:
                - '456'
                - '789'
      method: GET
      path: /macros/{id}
      request:
        name: GetMacroRequest
        path-parameters:
          id:
            docs: The unique identifier of the macro
            type: string
      response:
        docs: Macro found
        status-code: 200
        type: optional<Macro>
      source:
        openapi: ../descriptions/0/api.intercom.io.yaml
    listMacros:
      auth: true
      display-name: List all macros
      docs: >
        You can fetch a list of all macros (saved replies) in your workspace for
        use in automating responses.


        The macros are returned in descending order by updated_at.


        **Pagination**


        This endpoint uses cursor-based pagination via the `starting_after`
        parameter. The cursor is a Base64-encoded JSON array containing
        `[updated_at, id]` of the last item from the previous page.


        **Placeholder Transformation**


        The API transforms Intercom placeholders to a more standard XML-like
        format:

        - From: `{{user.name | fallback: 'there'}}`

        - To: `<attribute key="user.name" default="there"/>`
      errors:
        - unstableRoot.BadRequestError
        - unstableRoot.UnauthorizedError
        - unstableRoot.ForbiddenError
      examples:
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Basic list of macros
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                    - messenger
                  body: >-
                    <p>Hi <attribute key="user.name" default="there"/>, your
                    order #<attribute key="order.number"/> is ready for
                    pickup!</p>
                  body_text: >-
                    Hi {{user.name|fallback:"there"}}, your order
                    #{{order.number}} is ready for pickup!
                  created_at: '2025-07-17T11:18:08Z'
                  id: '123'
                  name: Order Status Update
                  type: macro
                  updated_at: '2025-07-17T15:30:24Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
                - available_on:
                    - inbox
                  body: >-
                    <p>Welcome to our support! I'm <attribute
                    key="teammate.name"/>. How can I help you today?</p>
                  body_text: >-
                    Welcome to our support! I'm {{teammate.name}}. How can I
                    help you today?
                  created_at: '2025-07-21T14:44:35Z'
                  id: '456'
                  name: Welcome Message
                  type: macro
                  updated_at: '2025-07-21T14:44:35Z'
                  visible_to: specific_teams
                  visible_to_team_ids:
                    - '789'
                    - '101'
              pages:
                next:
                  starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
                per_page: 50
                type: pages
              type: list
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Paginated response using starting_after cursor
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                    - messenger
                  body: >-
                    <p>I understand you'd like a refund for order #<attribute
                    key="conversation.custom_attributes.order_number"/>. The
                    refund will be processed within 3-5 business days.</p>
                  body_text: >-
                    I understand you'd like a refund for order
                    #{{conversation.custom_attributes.order_number}}. The refund
                    will be processed within 3-5 business days.
                  created_at: '2025-07-21T07:15:34Z'
                  id: '789'
                  name: Refund Process
                  type: macro
                  updated_at: '2025-07-21T07:15:34Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
                - available_on:
                    - inbox
                    - messenger
                  body: >-
                    <p>Thank you for your interest in <attribute
                    key="product.name" default="our products"/>. I'd be happy to
                    provide more information!</p>
                  body_text: >-
                    Thank you for your interest in {{product.name|fallback:"our
                    products"}}. I'd be happy to provide more information!
                  created_at: '2025-07-20T05:33:20Z'
                  id: '101'
                  name: Product Inquiry Response
                  type: macro
                  updated_at: '2025-07-21T10:00:00Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
              pages:
                next:
                  starting_after: WzE3MTk0MDAwMDAuMCwgIjEwMSJd
                per_page: 50
                type: pages
              type: list
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Macros filtered by updated_since parameter
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                  body: >-
                    <p>Your order has been shipped via <attribute
                    key="shipping.carrier" default="our shipping partner"/>.
                    Tracking number: <attribute
                    key="shipping.tracking_number"/></p>
                  body_text: >-
                    Your order has been shipped via
                    {{shipping.carrier|fallback:"our shipping partner"}}.
                    Tracking number: {{shipping.tracking_number}}
                  created_at: '2025-07-22T05:31:01Z'
                  id: '234'
                  name: Shipping Update Template
                  type: macro
                  updated_at: '2025-07-22T18:45:12Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
              pages:
                per_page: 50
                type: pages
              type: list
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Macros with various placeholder formats
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                  body: >-
                    <p>Hi <attribute key="user.first_name"
                    default="there"/>,</p><p>Your account status: <attribute
                    key="user.custom_attributes.account_status" default="pending
                    review"/></p><p>Last activity: <attribute
                    key="user.last_seen_at"/></p>
                  body_text: >-
                    Hi {{user.first_name|fallback:"there"}},


                    Your account status:
                    {{user.custom_attributes.account_status|fallback:"pending
                    review"}}


                    Last activity: {{user.last_seen_at}}
                  created_at: '2025-07-21T09:00:00Z'
                  id: '567'
                  name: Account Status Review
                  type: macro
                  updated_at: '2025-07-21T09:00:00Z'
                  visible_to: specific_teams
                  visible_to_team_ids:
                    - security_team
              pages:
                per_page: 50
                type: pages
              type: list
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Empty macro list (no macros or all filtered out)
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                    - messenger
                  body: >-
                    <p>Hi <attribute key="user.name" default="there"/>, your
                    order is ready!</p>
                  body_text: Hi {{user.name|fallback:"there"}}, your order is ready!
                  created_at: '2025-07-17T11:18:08Z'
                  id: '123'
                  name: Order Status Update
                  type: macro
                  updated_at: '2025-07-17T15:30:24Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
              pages:
                per_page: 50
                type: pages
              type: list
        - code-samples:
            - code: >
                curl -X GET
                'https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                \
                  -H 'Authorization: Bearer <YOUR_ACCESS_TOKEN>' \
                  -H 'Accept: application/json' \
                  -H 'Intercom-Version: @Unstable'
              language: cURL
              name: cURL
            - code: >
                const response = await
                fetch('https://api.intercom.io/macros?per_page=25&starting_after=WzE3MTk0OTM3NTcuMCwgIjEyMyJd',
                {
                  headers: {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                  }
                });

                const macros = await response.json();
              language: Node.js
              name: Node.js
            - code: |
                import requests

                headers = {
                    'Authorization': 'Bearer <YOUR_ACCESS_TOKEN>',
                    'Accept': 'application/json',
                    'Intercom-Version': '@Unstable'
                }

                params = {
                    'per_page': 25,
                    'starting_after': 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }

                response = requests.get('https://api.intercom.io/macros',
                                      headers=headers,
                                      params=params)
                macros = response.json()
              language: Python
              name: Python
            - code: |
                require 'net/http'
                require 'json'

                uri = URI('https://api.intercom.io/macros')
                params = {
                  per_page: 25,
                  starting_after: 'WzE3MTk0OTM3NTcuMCwgIjEyMyJd'
                }
                uri.query = URI.encode_www_form(params)

                http = Net::HTTP.new(uri.host, uri.port)
                http.use_ssl = true

                request = Net::HTTP::Get.new(uri)
                request['Authorization'] = 'Bearer <YOUR_ACCESS_TOKEN>'
                request['Accept'] = 'application/json'
                request['Intercom-Version'] = '@Unstable'

                response = http.request(request)
                macros = JSON.parse(response.body)
              language: Ruby
              name: Ruby
          name: Large list with performance optimization
          query-parameters:
            starting_after: WzE3MTk0OTM3NTcuMCwgIjEyMyJd
          response:
            body:
              data:
                - available_on:
                    - inbox
                  created_at: '2025-07-22T11:08:20Z'
                  id: '1001'
                  name: Quick Response 1
                  type: macro
                  updated_at: '2025-07-23T11:08:20Z'
                  visible_to: everyone
                  visible_to_team_ids:
                    - '456'
                    - '789'
              pages:
                next:
                  starting_after: WzE3MTk0OTAxMDAuMCwgIjEwMDIiXQ==
                per_page: 50
                type: pages
              type: list
      method: GET
      path: /macros
      request:
        name: ListMacrosRequest
        query-parameters:
          per_page:
            default: 50
            docs: The number of results per page
            type: optional<integer>
            validation:
              max: 150
              min: 1
          starting_after:
            docs: Base64-encoded cursor containing [updated_at, id] for pagination
            type: optional<string>
          updated_since:
            docs: Unix timestamp to filter macros updated after this time
            type: optional<long>
      response:
        docs: Successful response
        status-code: 200
        type: MacroList
      source:
        openapi: ../descriptions/0/api.intercom.io.yaml
  source:
    openapi: ../descriptions/0/api.intercom.io.yaml
