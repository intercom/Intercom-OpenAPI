imports:
  unstableAdmins: admins.yml
  unstableAiContentSource: aiContentSource.yml
  unstableArticles: articles.yml
  unstableCalls: calls.yml
  unstableCompanies: companies.yml
  unstableContacts: contacts.yml
  unstableConversations: conversations.yml
  unstableCustomObjectInstances: customObjectInstances.yml
  unstableDataAttributes: dataAttributes.yml
  unstableDataEvents: dataEvents.yml
  unstableHelpCenter: helpCenter.yml
  unstableInternalArticles: internalArticles.yml
  unstableNews: news.yml
  unstableNotes: notes.yml
  unstableSegments: segments.yml
  unstableSubscriptionTypes: subscriptionTypes.yml
  unstableTags: tags.yml
  unstableTeams: teams.yml
  unstableTickets: tickets.yml
types:
  ActivityLog:
    docs: Activities performed by Admins.
    properties:
      activity_description:
        docs: A sentence or two describing the activity.
        type: optional<string>
      activity_type:
        type: optional<ActivityLogActivityType>
      created_at:
        docs: The time the activity was created.
        type: optional<integer>
      id:
        docs: The id representing the activity.
        type: optional<string>
      metadata:
        type: optional<ActivityLogMetadata>
      performed_by:
        docs: Details about the Admin involved in the activity.
        type: optional<ActivityLogPerformedBy>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ActivityLogActivityType:
    enum:
      - admin_conversation_assignment_limit_change
      - admin_ticket_assignment_limit_change
      - admin_away_mode_change
      - admin_deletion
      - admin_deprovisioned
      - admin_impersonation_end
      - admin_impersonation_start
      - admin_invite_change
      - admin_invite_creation
      - admin_invite_deletion
      - admin_login_failure
      - admin_login_success
      - admin_logout
      - admin_password_reset_request
      - admin_password_reset_success
      - admin_permission_change
      - admin_provisioned
      - admin_two_factor_auth_change
      - admin_unauthorized_sign_in_method
      - app_admin_join
      - app_authentication_method_change
      - app_data_deletion
      - app_data_export
      - app_google_sso_domain_change
      - app_identity_verification_change
      - app_name_change
      - app_outbound_address_change
      - app_package_installation
      - app_package_token_regeneration
      - app_package_uninstallation
      - app_team_creation
      - app_team_deletion
      - app_team_membership_modification
      - app_timezone_change
      - app_webhook_creation
      - app_webhook_deletion
      - articles_in_messenger_enabled_change
      - bulk_delete
      - bulk_export
      - campaign_deletion
      - campaign_state_change
      - conversation_part_deletion
      - conversation_topic_change
      - conversation_topic_creation
      - conversation_topic_deletion
      - help_center_settings_change
      - inbound_conversations_change
      - inbox_access_change
      - message_deletion
      - message_state_change
      - messenger_look_and_feel_change
      - messenger_search_required_change
      - messenger_spaces_change
      - office_hours_change
      - role_change
      - role_creation
      - role_deletion
      - ruleset_activation_title_preview
      - ruleset_creation
      - ruleset_deletion
      - search_browse_enabled_change
      - search_browse_required_change
      - seat_change
      - seat_revoke
      - security_settings_change
      - temporary_expectation_change
      - upfront_email_collection_change
      - welcome_message_change
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ActivityLogList:
    docs: A paginated list of activity logs.
    properties:
      activity_logs:
        docs: An array of activity logs
        type: optional<list<optional<ActivityLog>>>
      pages:
        type: optional<CursorPages>
      type:
        docs: >-
          String representing the object's type. Always has the value
          `activity_log.list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ActivityLogMetadata:
    docs: Additional data provided about Admin activity.
    properties:
      auto_changed:
        docs: Indicates if the status was changed automatically or manually.
        type: optional<string>
      away_mode:
        docs: >-
          The away mode status which is set to true when away and false when
          returned.
        type: optional<boolean>
      away_status_reason:
        docs: The reason the Admin is away.
        type: optional<string>
      conversation_assignment_limit:
        docs: The conversation assignment limit value for an admin.
        type: optional<integer>
      external_id:
        docs: The unique identifier for the contact which is provided by the Client.
        type: optional<string>
      reassign_conversations:
        docs: >-
          Indicates if conversations should be reassigned while an Admin is
          away.
        type: optional<boolean>
      sign_in_method:
        docs: The way the admin signed in.
        type: optional<string>
      source:
        docs: The action that initiated the status change.
        type: optional<string>
      ticket_assignment_limit:
        docs: The ticket assignment limit value for an admin.
        type: optional<integer>
      update_by:
        docs: The ID of the Admin who initiated the activity.
        type: optional<integer>
      update_by_name:
        docs: The name of the Admin who initiated the activity.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ActivityLogPerformedBy:
    docs: Details about the Admin involved in the activity.
    inline: true
    properties:
      email:
        docs: The email of the admin.
        type: optional<string>
      id:
        docs: The id representing the admin.
        type: optional<string>
      ip:
        docs: The IP address of the admin.
        type: optional<string>
      type:
        docs: String representing the object's type. Always has the value `admin`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AddressableList:
    docs: A list used to access other resources from a parent model.
    properties:
      id:
        docs: The id of the addressable object
        type: optional<string>
      type:
        docs: The addressable object type
        type: optional<string>
        validation:
          format: uri
      url:
        docs: Url to get more company resources for this contact
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminList:
    docs: A list of admins associated with a given workspace.
    properties:
      admins:
        docs: A list of admins associated with a given workspace.
        type: optional<list<optional<unstableAdmins.Admin>>>
      type:
        docs: >-
          String representing the object's type. Always has the value
          `admin.list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminPriorityLevel:
    docs: Admin priority levels for the team
    properties:
      primary_admin_ids:
        docs: The primary admin ids for the team
        type: optional<list<integer>>
      secondary_admin_ids:
        docs: The secondary admin ids for the team
        type: optional<list<integer>>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminReplyConversationRequest:
    docs: Payload of the request to reply on behalf of an admin
    properties:
      admin_id:
        docs: The id of the admin who is authoring the comment.
        type: string
      attachment_files:
        docs: >-
          A list of files that will be added as attachments. You can include up
          to 10 files
        type: optional<list<ConversationAttachmentFiles>>
      attachment_urls:
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
        type: optional<list<string>>
      body:
        docs: >-
          The text body of the reply. Notes accept some HTML formatting. Must be
          present for comment and note message types.
        type: optional<string>
      created_at:
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
        type: optional<integer>
      message_type: AdminReplyConversationRequestMessageType
      reply_options:
        docs: >-
          The quick reply options to display to the end user. Must be present
          for quick_reply message types.
        type: optional<list<QuickReplyOption>>
      type: literal<"admin">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminReplyConversationRequestMessageType:
    enum:
      - comment
      - note
      - quick_reply
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminReplyTicketRequest:
    docs: Payload of the request to reply on behalf of an admin
    properties:
      admin_id:
        docs: The id of the admin who is authoring the comment.
        type: string
      attachment_urls:
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
        type: optional<list<string>>
      body:
        docs: >-
          The text body of the reply. Notes accept some HTML formatting. Must be
          present for comment and note message types.
        type: optional<string>
      created_at:
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
        type: optional<integer>
      message_type: AdminReplyTicketRequestMessageType
      reply_options:
        docs: >-
          The quick reply options to display. Must be present for quick_reply
          message types.
        type: optional<list<AdminReplyTicketRequestReplyOptionsItem>>
      type: literal<"admin">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminReplyTicketRequestMessageType:
    enum:
      - comment
      - note
      - quick_reply
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminReplyTicketRequestReplyOptionsItem:
    inline: true
    properties:
      text:
        docs: The text to display in this quick reply option.
        type: string
      uuid:
        docs: >-
          A unique identifier for this quick reply option. This value will be
          available within the metadata of the comment ticket part that is
          created when a user clicks on this reply option.
        type: string
        validation:
          format: uuid
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminWithApp:
    docs: Admins are the teammate accounts that have access to a workspace
    properties:
      app:
        docs: App that the admin belongs to.
        type: optional<App>
      avatar:
        docs: This object represents the avatar associated with the admin.
        type: optional<AdminWithAppAvatar>
      away_mode_enabled:
        docs: Identifies if this admin is currently set in away mode.
        type: optional<boolean>
      away_mode_reassign:
        docs: >-
          Identifies if this admin is set to automatically reassign new
          conversations to the apps default inbox.
        type: optional<boolean>
      email:
        docs: The email of the admin.
        type: optional<string>
      email_verified:
        docs: Identifies if this admin's email is verified.
        type: optional<boolean>
      has_inbox_seat:
        docs: >-
          Identifies if this admin has a paid inbox seat to restrict/allow
          features that require them.
        type: optional<boolean>
      id:
        docs: The id representing the admin.
        type: optional<string>
      job_title:
        docs: The job title of the admin.
        type: optional<string>
      name:
        docs: The name of the admin.
        type: optional<string>
      team_ids:
        docs: This is a list of ids of the teams that this admin is part of.
        type: optional<list<integer>>
      type:
        docs: String representing the object's type. Always has the value `admin`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AdminWithAppAvatar:
    docs: This object represents the avatar associated with the admin.
    inline: true
    properties:
      image_url:
        docs: This object represents the avatar associated with the admin.
        type: optional<string>
        validation:
          format: uri
      type:
        default: avatar
        docs: >-
          This is a string that identifies the type of the object. It will
          always have the value `avatar`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  App:
    docs: App is a workspace on Intercom
    properties:
      created_at:
        docs: When the app was created.
        type: optional<integer>
      id_code:
        docs: The id of the app.
        type: optional<string>
      identity_verification:
        docs: Whether or not the app uses identity verification.
        type: optional<boolean>
      name:
        docs: The name of the app.
        type: optional<string>
      region:
        docs: The Intercom region the app is located in.
        type: optional<string>
      timezone:
        docs: The timezone of the region where the app is located.
        type: optional<string>
      type:
        default: app
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ArticleContent:
    docs: The Content of an Article.
    properties:
      author_id:
        docs: The ID of the author of the article.
        type: optional<integer>
      body:
        docs: The body of the article.
        type: optional<string>
      created_at:
        docs: The time when the article was created (seconds).
        type: optional<integer>
      description:
        docs: The description of the article.
        type: optional<string>
      state:
        docs: Whether the article is `published` or is a `draft` .
        type: optional<ArticleContentState>
      title:
        docs: The title of the article.
        type: optional<string>
      type:
        docs: The type of object - `article_content` .
        type: optional<string>
      updated_at:
        docs: The time when the article was last updated (seconds).
        type: optional<integer>
      url:
        docs: The URL of the article.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ArticleContentState:
    docs: Whether the article is `published` or is a `draft` .
    enum:
      - published
      - draft
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ArticleList:
    docs: This will return a list of articles for the App.
    properties:
      data:
        docs: An array of Article objects
        type: optional<list<unstableArticles.ArticleListItem>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of articles.
        type: optional<integer>
      type:
        docs: The type of the object - `list`.
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ArticleStatistics:
    docs: The statistics of an article.
    properties:
      conversions:
        docs: The number of conversations started from the article.
        type: optional<integer>
      happy_reaction_percentage:
        docs: >-
          The percentage of happy reactions the article has received against
          other types of reaction.
        type: optional<float>
      neutral_reaction_percentage:
        docs: >-
          The percentage of neutral reactions the article has received against
          other types of reaction.
        type: optional<float>
      reactions:
        docs: The number of total reactions the article has received.
        type: optional<integer>
      sad_reaction_percentage:
        docs: >-
          The percentage of sad reactions the article has received against other
          types of reaction.
        type: optional<float>
      type:
        docs: The type of object - `article_statistics`.
        type: optional<literal<"article_statistics">>
      views:
        docs: The number of total views the article has received.
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ArticleTranslatedContent:
    docs: >-
      The Translated Content of an Article. The keys are the locale codes and
      the values are the translated content of the article.
    properties:
      ar:
        docs: The content of the article in Arabic
        type: optional<ArticleContent>
      bg:
        docs: The content of the article in Bulgarian
        type: optional<ArticleContent>
      bs:
        docs: The content of the article in Bosnian
        type: optional<ArticleContent>
      ca:
        docs: The content of the article in Catalan
        type: optional<ArticleContent>
      cs:
        docs: The content of the article in Czech
        type: optional<ArticleContent>
      da:
        docs: The content of the article in Danish
        type: optional<ArticleContent>
      de:
        docs: The content of the article in German
        type: optional<ArticleContent>
      el:
        docs: The content of the article in Greek
        type: optional<ArticleContent>
      en:
        docs: The content of the article in English
        type: optional<ArticleContent>
      es:
        docs: The content of the article in Spanish
        type: optional<ArticleContent>
      et:
        docs: The content of the article in Estonian
        type: optional<ArticleContent>
      fi:
        docs: The content of the article in Finnish
        type: optional<ArticleContent>
      fr:
        docs: The content of the article in French
        type: optional<ArticleContent>
      he:
        docs: The content of the article in Hebrew
        type: optional<ArticleContent>
      hr:
        docs: The content of the article in Croatian
        type: optional<ArticleContent>
      hu:
        docs: The content of the article in Hungarian
        type: optional<ArticleContent>
      id:
        docs: The content of the article in Indonesian
        type: optional<ArticleContent>
      it:
        docs: The content of the article in Italian
        type: optional<ArticleContent>
      ja:
        docs: The content of the article in Japanese
        type: optional<ArticleContent>
      ko:
        docs: The content of the article in Korean
        type: optional<ArticleContent>
      lt:
        docs: The content of the article in Lithuanian
        type: optional<ArticleContent>
      lv:
        docs: The content of the article in Latvian
        type: optional<ArticleContent>
      mn:
        docs: The content of the article in Mongolian
        type: optional<ArticleContent>
      nb:
        docs: The content of the article in Norwegian
        type: optional<ArticleContent>
      nl:
        docs: The content of the article in Dutch
        type: optional<ArticleContent>
      pl:
        docs: The content of the article in Polish
        type: optional<ArticleContent>
      pt:
        docs: The content of the article in Portuguese (Portugal)
        type: optional<ArticleContent>
      pt-BR:
        docs: The content of the article in Portuguese (Brazil)
        type: optional<ArticleContent>
      ro:
        docs: The content of the article in Romanian
        type: optional<ArticleContent>
      ru:
        docs: The content of the article in Russian
        type: optional<ArticleContent>
      sl:
        docs: The content of the article in Slovenian
        type: optional<ArticleContent>
      sr:
        docs: The content of the article in Serbian
        type: optional<ArticleContent>
      sv:
        docs: The content of the article in Swedish
        type: optional<ArticleContent>
      tr:
        docs: The content of the article in Turkish
        type: optional<ArticleContent>
      type:
        docs: The type of object - article_translated_content.
        type: optional<string>
      vi:
        docs: The content of the article in Vietnamese
        type: optional<ArticleContent>
      zh-CN:
        docs: The content of the article in Chinese (China)
        type: optional<ArticleContent>
      zh-TW:
        docs: The content of the article in Chinese (Taiwan)
        type: optional<ArticleContent>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AssignConversationRequest:
    docs: Payload of the request to assign a conversation
    properties:
      admin_id:
        docs: The id of the admin who is performing the action.
        type: string
      assignee_id:
        docs: >-
          The `id` of the `admin` or `team` which will be assigned the
          conversation. A conversation can be assigned both an admin and a
          team.\nSet `0` if you want this assign to no admin or team (ie.
          Unassigned).
        type: string
      body:
        docs: >-
          Optionally you can send a response in the conversation when it is
          assigned.
        type: optional<string>
      type: AssignConversationRequestType
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AssignConversationRequestType:
    enum:
      - admin
      - team
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  AwayStatusReason:
    properties:
      created_at:
        docs: The Unix timestamp when the status reason was created
        type: optional<integer>
      deleted:
        docs: Whether the status reason has been soft deleted
        type: optional<boolean>
      emoji:
        docs: The emoji associated with the status reason
        type: optional<string>
      id:
        docs: The unique identifier for the away status reason
        type: optional<string>
      label:
        docs: The display text for the away status reason
        type: optional<string>
      order:
        docs: The display order of the status reason
        type: optional<integer>
      type: optional<string>
      updated_at:
        docs: The Unix timestamp when the status reason was last updated
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CallList:
    docs: A paginated list of calls.
    properties:
      data:
        docs: A list of calls.
        type: optional<list<unstableCalls.Call>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: Total number of items available.
        type: optional<integer>
      type:
        docs: String representing the object's type. Always has the value `list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CloseConversationRequest:
    docs: Payload of the request to close a conversation
    properties:
      admin_id:
        docs: The id of the admin who is performing the action.
        type: string
      body:
        docs: >-
          Optionally you can leave a message in the conversation to provide
          additional context to the user and other teammates.
        type: optional<string>
      type: literal<"admin">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CollectionList:
    docs: This will return a list of Collections for the App.
    properties:
      data:
        docs: An array of collection objects
        type: optional<list<unstableHelpCenter.Collection>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of collections.
        type: optional<integer>
      type:
        docs: The type of the object - `list`.
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CompanyAttachedContacts:
    docs: A list of Contact Objects
    properties:
      data:
        docs: An array containing Contact Objects
        type: optional<list<unstableContacts.Contact>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: The total number of contacts
        type: optional<integer>
      type:
        docs: The type of object - `list`
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CompanyAttachedSegments:
    docs: A list of Segment Objects
    properties:
      data:
        docs: An array containing Segment Objects
        type: optional<list<unstableSegments.Segment>>
      type:
        docs: The type of object - `list`
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CompanyData:
    docs: >-
      An object containing data about the companies that a contact is associated
      with.
    properties:
      id:
        docs: The unique identifier for the company which is given by Intercom.
        type: optional<string>
      type:
        docs: The type of the object. Always company.
        type: optional<literal<"company">>
      url:
        docs: The relative URL of the company.
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CompanyList:
    docs: This will return a list of companies for the App.
    properties:
      data:
        docs: An array containing Company Objects.
        type: optional<list<unstableCompanies.Company>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: The total number of companies.
        type: optional<integer>
      type:
        docs: The type of object - `list`.
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CompanyScroll:
    docs: >-
      Companies allow you to represent organizations using your product. Each
      company will have its own description and be associated with contacts. You
      can fetch, create, update and list companies.
    properties:
      data:
        type: optional<list<unstableCompanies.Company>>
      pages:
        type: optional<CursorPages>
      scroll_param:
        docs: >-
          The scroll parameter to use in the next request to fetch the next page
          of results.
        type: optional<string>
      total_count:
        docs: The total number of companies
        type: optional<integer>
      type:
        docs: The type of object - `list`
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactArchived:
    docs: archived contact object
    extends:
      - ContactReference
    properties:
      archived:
        docs: Whether the contact is archived or not.
        type: optional<boolean>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactAttachedCompanies:
    docs: A list of Company Objects
    properties:
      companies:
        docs: An array containing Company Objects
        type: optional<list<unstableCompanies.Company>>
      pages:
        type: optional<PagesLink>
      total_count:
        docs: The total number of companies associated to this contact
        type: optional<integer>
      type:
        docs: The type of object
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactBlocked:
    docs: blocked contact object
    extends:
      - ContactReference
    properties:
      blocked:
        docs: Always true.
        type: optional<boolean>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactCompanies:
    docs: >-
      An object with metadata about companies attached to a contact . Up to 10
      will be displayed here. Use the url to get more.
    properties:
      data:
        docs: An array of company data objects attached to the contact.
        type: optional<list<CompanyData>>
      has_more:
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
        type: optional<boolean>
      total_count:
        docs: >-
          Integer representing the total number of companies attached to this
          contact
        type: optional<integer>
      url:
        docs: Url to get more company resources for this contact
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactDeleted:
    docs: deleted contact object
    extends:
      - ContactReference
    properties:
      deleted:
        docs: Whether the contact is deleted or not.
        type: optional<boolean>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactList:
    docs: Contacts are your users in Intercom.
    properties:
      data:
        docs: The list of contact objects
        type: optional<list<unstableContacts.Contact>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of objects.
        type: optional<integer>
      type:
        docs: Always list
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactLocation:
    docs: An object containing location meta data about a Intercom contact.
    properties:
      city:
        docs: The city that the contact is located in
        type: optional<string>
      country:
        docs: The country that the contact is located in
        type: optional<string>
      region:
        docs: The overal region that the contact is located in
        type: optional<string>
      type:
        docs: Always location
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactNotes:
    docs: >-
      An object containing notes meta data about the notes that a contact has.
      Up to 10 will be displayed here. Use the url to get more.
    properties:
      data:
        docs: This object represents the notes attached to a contact.
        type: optional<list<AddressableList>>
      has_more:
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
        type: optional<boolean>
      total_count:
        docs: >-
          Int representing the total number of companyies attached to this
          contact
        type: optional<integer>
      url:
        docs: Url to get more company resources for this contact
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReference:
    docs: reference to contact object
    properties:
      external_id:
        docs: The unique identifier for the contact which is provided by the Client.
        type: optional<string>
      id:
        docs: The unique identifier for the contact which is given by Intercom.
        type: optional<string>
      type:
        docs: always contact
        type: optional<literal<"contact">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyBaseRequest:
    properties:
      attachment_urls:
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
        type: optional<list<string>>
      body:
        docs: The text body of the comment.
        type: string
      created_at:
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
        type: optional<integer>
      message_type: literal<"comment">
      reply_options:
        docs: >-
          The quick reply selection the contact wishes to respond with. These
          map to buttons displayed in the Messenger UI if sent by a bot, or the
          reply options sent by an Admin via the API.
        type: optional<list<ContactReplyBaseRequestReplyOptionsItem>>
      type: literal<"user">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyBaseRequestReplyOptionsItem:
    inline: true
    properties:
      text:
        docs: The text of the chosen reply option.
        type: string
      uuid:
        docs: The unique identifier for the quick reply option selected.
        type: string
        validation:
          format: uuid
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyConversationRequest:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: ContactReplyIntercomUserIdRequest
      - type: ContactReplyEmailRequest
      - type: ContactReplyUserIdRequest
  ContactReplyEmailRequest:
    docs: Payload of the request to reply on behalf of a contact using their `email`
    extends:
      - ContactReplyBaseRequest
    properties:
      attachment_files:
        docs: A list of files that will be added as attachments.
        type: optional<list<ConversationAttachmentFiles>>
      email:
        docs: The email you have defined for the user.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyIntercomUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `intercom_user_id`
    extends:
      - ContactReplyBaseRequest
    properties:
      attachment_files:
        docs: A list of files that will be added as attachments.
        type: optional<list<ConversationAttachmentFiles>>
      intercom_user_id:
        docs: The identifier for the contact as given by Intercom.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyTicketEmailRequest:
    docs: Payload of the request to reply on behalf of a contact using their `email`
    extends:
      - ContactReplyBaseRequest
    properties:
      email:
        docs: The email you have defined for the user.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyTicketIntercomUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `intercom_user_id`
    extends:
      - ContactReplyBaseRequest
    properties:
      intercom_user_id:
        docs: The identifier for the contact as given by Intercom.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyTicketRequest:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: ContactReplyTicketIntercomUserIdRequest
      - type: ContactReplyTicketUserIdRequest
      - type: ContactReplyTicketEmailRequest
  ContactReplyTicketUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `user_id`
    extends:
      - ContactReplyBaseRequest
    properties:
      user_id:
        docs: The external_id you have defined for the contact.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactReplyUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `user_id`
    extends:
      - ContactReplyBaseRequest
    properties:
      attachment_files:
        docs: >-
          A list of files that will be added as attachments. You can include up
          to 10 files.
        type: optional<list<ConversationAttachmentFiles>>
      user_id:
        docs: The external_id you have defined for the contact.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactSegments:
    docs: A list of segments objects attached to a specific contact.
    properties:
      data:
        docs: Segment objects associated with the contact.
        type: optional<list<unstableSegments.Segment>>
      type:
        docs: The type of the object
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactSocialProfiles:
    docs: An object containing social profiles that a contact has.
    properties:
      data:
        docs: A list of social profiles objects associated with the contact.
        type: optional<list<SocialProfile>>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactSubscriptionTypes:
    docs: >-
      An object containing Subscription Types meta data about the
      SubscriptionTypes that a contact has.
    properties:
      data:
        docs: This object represents the subscriptions attached to a contact.
        type: optional<list<AddressableList>>
      has_more:
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
        type: optional<boolean>
      total_count:
        docs: >-
          Int representing the total number of subscription types attached to
          this contact
        type: optional<integer>
      url:
        docs: Url to get more subscription type resources for this contact
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactTags:
    docs: >-
      An object containing tags meta data about the tags that a contact has. Up
      to 10 will be displayed here. Use the url to get more.
    properties:
      data:
        docs: This object represents the tags attached to a contact.
        type: optional<list<AddressableList>>
      has_more:
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
        type: optional<boolean>
      total_count:
        docs: Int representing the total number of tags attached to this contact
        type: optional<integer>
      url:
        docs: url to get more tag resources for this contact
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContactUnarchived:
    docs: unarchived contact object
    extends:
      - ContactReference
    properties:
      archived:
        docs: Whether the contact is archived or not.
        type: optional<boolean>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ContentSourcesList:
    properties:
      content_sources:
        docs: The content sources used by AI Agent in the conversation.
        type: optional<list<unstableAiContentSource.ContentSource>>
      total_count:
        docs: >-
          The total number of content sources used by AI Agent in the
          conversation.
        type: optional<integer>
      type:
        type: optional<literal<"content_source.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttachmentFiles:
    docs: Properties of the attachment files in a conversation part
    properties:
      content_type:
        docs: The content type of the file
        type: optional<string>
      data:
        docs: The base64 encoded file data.
        type: optional<string>
      name:
        docs: The name of the file.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByAdmin:
    docs: >-
      Contains details about Custom Data Attributes (CDAs) that were modified by
      an admin (operator) for conversation part type
      <code>conversation_attribute_updated_by_admin</code>.
    properties:
      attribute:
        type: optional<ConversationAttributeUpdatedByAdminAttribute>
      value:
        type: optional<ConversationAttributeUpdatedByAdminValue>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByAdminAttribute:
    inline: true
    properties:
      name:
        docs: Name of the CDA updated
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByAdminValue:
    inline: true
    properties:
      name:
        docs: Value of the CDA updated
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByWorkflow:
    docs: >-
      Contains details about the workflow that was triggered and any Custom Data
      Attributes (CDAs) that were modified during the workflow execution for
      conversation part type
      <code>conversation_attribute_updated_by_workflow</code>.
    properties:
      attribute:
        type: optional<ConversationAttributeUpdatedByWorkflowAttribute>
      value:
        type: optional<ConversationAttributeUpdatedByWorkflowValue>
      workflow:
        type: optional<ConversationAttributeUpdatedByWorkflowWorkflow>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByWorkflowAttribute:
    inline: true
    properties:
      name:
        docs: Name of the CDA updated
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByWorkflowValue:
    inline: true
    properties:
      name:
        docs: Value of the CDA updated
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationAttributeUpdatedByWorkflowWorkflow:
    inline: true
    properties:
      name:
        docs: Name of the workflow
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationContacts:
    docs: >-
      The list of contacts (users or leads) involved in this conversation. This
      will only contain one customer unless more were added via the group
      conversation feature.
    properties:
      contacts:
        docs: >-
          The list of contacts (users or leads) involved in this conversation.
          This will only contain one customer unless more were added via the
          group conversation feature.
        type: optional<list<ContactReference>>
      type:
        docs: ''
        type: optional<literal<"contact.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationDeleted:
    docs: deleted conversation object
    properties:
      deleted:
        docs: Whether the conversation is deleted or not.
        type: optional<boolean>
      id:
        docs: The unique identifier for the conversation.
        type: optional<string>
      object:
        docs: always conversation
        type: optional<literal<"conversation">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationFirstContactReply:
    docs: >-
      An object containing information on the first users message. For a contact
      initiated message this will represent the users original message.
    properties:
      created_at:
        docs: ''
        type: optional<integer>
      type:
        docs: ''
        type: optional<string>
      url:
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationList:
    docs: >-
      Conversations are how you can communicate with users in Intercom. They are
      created when a contact replies to an outbound message, or when one admin
      directly sends a message to a single contact.
    properties:
      conversations:
        docs: The list of conversation objects
        type: optional<list<unstableConversations.Conversation>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of objects.
        type: optional<integer>
      type:
        docs: Always conversation.list
        type: optional<literal<"conversation.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationPart:
    docs: A Conversation Part represents a message in the conversation.
    properties:
      app_package_code:
        docs: >-
          The app package code if this part was created via API. null if the
          part was not created via API.
        type: optional<string>
      assigned_to:
        docs: >-
          The id of the admin that was assigned the conversation by this
          conversation_part (null if there has been no change in assignment.)
        type: optional<Reference>
      attachments:
        docs: A list of attachments for the part.
        type: optional<list<PartAttachment>>
      author:
        type: optional<ConversationPartAuthor>
      body:
        docs: >-
          The message body, which may contain HTML. For Twitter, this will show
          a generic message regarding why the body is obscured.
        type: optional<string>
      created_at:
        docs: The time the conversation part was created.
        type: optional<integer>
      email_message_metadata:
        type: optional<EmailMessageMetadata>
      event_details:
        type: optional<EventDetails>
      external_id:
        docs: The external id of the conversation part
        type: optional<string>
      id:
        docs: The id representing the conversation part.
        type: optional<string>
      metadata:
        type: optional<ConversationPartMetadata>
      notified_at:
        docs: The time the user was notified with the conversation part.
        type: optional<integer>
      part_type:
        docs: The type of conversation part.
        type: optional<string>
      redacted:
        docs: Whether or not the conversation part has been redacted.
        type: optional<boolean>
      state:
        docs: >-
          Indicates the current state of conversation when the conversation part
          was created.
        type: optional<ConversationPartState>
      tags:
        docs: A list of tags objects associated with the conversation part.
        type: optional<list<unstableTags.TagBasic>>
      type:
        docs: Always conversation_part
        type: optional<string>
      updated_at:
        docs: The last time the conversation part was updated.
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationPartAuthor:
    docs: >-
      The object who initiated the conversation, which can be a Contact, Admin
      or Team. Bots and campaigns send messages on behalf of Admins or Teams.
      For Twitter, this will be blank.
    properties:
      email:
        docs: The email of the author
        type: optional<string>
        validation:
          format: email
      from_ai_agent:
        docs: If this conversation part was sent by the AI Agent
        type: optional<boolean>
      id:
        docs: The id of the author
        type: optional<string>
      is_ai_answer:
        docs: If this conversation part body was generated by the AI Agent
        type: optional<boolean>
      name:
        docs: The name of the author
        type: optional<string>
      type:
        docs: The type of the author
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationPartMetadata:
    docs: Metadata for a conversation part
    properties:
      quick_reply_options:
        docs: >-
          The quick reply options sent by the Admin or bot, presented in this
          conversation part.
        type: optional<list<ConversationPartMetadataQuickReplyOptionsItem>>
      quick_reply_uuid:
        docs: >-
          The unique identifier for the quick reply option that was clicked by
          the end user.
        type: optional<string>
        validation:
          format: uuid
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationPartMetadataQuickReplyOptionsItem:
    extends:
      - QuickReplyOption
    inline: true
    properties:
      translations:
        docs: The translations for the quick reply option.
        type: optional<map<string, unknown>>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationParts:
    docs: >-
      A list of Conversation Part objects for each part message in the
      conversation. This is only returned when Retrieving a Conversation, and
      ignored when Listing all Conversations. There is a limit of 500 parts.
    properties:
      conversation_parts:
        docs: >-
          A list of Conversation Part objects for each part message in the
          conversation. This is only returned when Retrieving a Conversation,
          and ignored when Listing all Conversations. There is a limit of 500
          parts.
        type: optional<list<ConversationPart>>
      total_count:
        docs: ''
        type: optional<integer>
      type:
        docs: ''
        type: optional<literal<"conversation_part.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationPartState:
    docs: >-
      Indicates the current state of conversation when the conversation part was
      created.
    enum:
      - open
      - closed
      - snoozed
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationRating:
    docs: >-
      The Conversation Rating object which contains information on the rating
      and/or remark added by a Contact and the Admin assigned to the
      conversation.
    properties:
      contact:
        type: optional<ContactReference>
      created_at:
        docs: The time the rating was requested in the conversation being rated.
        type: optional<integer>
      rating:
        docs: The rating, between 1 and 5, for the conversation.
        type: optional<integer>
      remark:
        docs: An optional field to add a remark to correspond to the number rating
        type: optional<string>
      teammate:
        type: optional<Reference>
      updated_at:
        docs: The time the rating was last updated.
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationResponseTime:
    docs: Details of first response time of assigned team in seconds.
    properties:
      response_time:
        docs: First response time of assigned team in seconds.
        type: optional<integer>
      team_id:
        docs: Id of the assigned team.
        type: optional<integer>
      team_name:
        docs: >-
          Name of the assigned Team, null if team does not exist, Unassigned if
          no team is assigned.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationSource:
    docs: >-
      The type of the conversation part that started this conversation. Can be
      Contact, Admin, Campaign, Automated or Operator initiated.
    properties:
      attachments:
        docs: A list of attachments for the part.
        type: optional<list<PartAttachment>>
      author:
        type: optional<ConversationPartAuthor>
      body:
        docs: >-
          The message body, which may contain HTML. For Twitter, this will show
          a generic message regarding why the body is obscured.
        type: optional<string>
      delivered_as:
        docs: >-
          The conversation's initiation type. Possible values are
          customer_initiated, campaigns_initiated (legacy campaigns),
          operator_initiated (Custom bot), automated (Series and other outbounds
          with dynamic audience message) and admin_initiated (fixed audience
          message, ticket initiated by an admin, group email).
        type: optional<string>
      id:
        docs: The id representing the message.
        type: optional<string>
      redacted:
        docs: >-
          Whether or not the source message has been redacted. Only applicable
          for contact initiated messages.
        type: optional<boolean>
      subject:
        docs: >-
          Optional. The message subject. For Twitter, this will show a generic
          message regarding why the subject is obscured.
        type: optional<string>
      type:
        docs: >-
          This includes conversation, email, facebook, instagram, phone_call,
          phone_switch, push, sms, twitter and whatsapp.
        type: optional<ConversationSourceType>
      url:
        docs: >-
          The URL where the conversation was started. For Twitter, Email, and
          Bots, this will be blank.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationSourceType:
    docs: >-
      This includes conversation, email, facebook, instagram, phone_call,
      phone_switch, push, sms, twitter and whatsapp.
    enum:
      - conversation
      - email
      - facebook
      - instagram
      - phone_call
      - phone_switch
      - push
      - sms
      - twitter
      - whatsapp
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationStatistics:
    docs: >-
      A Statistics object containing all information required for reporting,
      with timestamps and calculated metrics.
    properties:
      assigned_team_first_response_time_by_team:
        docs: An array of conversation response time objects
        type: optional<list<ConversationResponseTime>>
      assigned_team_first_response_time_in_office_hours:
        docs: An array of conversation response time objects within office hours
        type: optional<list<ConversationResponseTime>>
      count_assignments:
        docs: Number of assignments after first_contact_reply_at.
        type: optional<integer>
      count_conversation_parts:
        docs: Total number of conversation parts.
        type: optional<integer>
      count_reopens:
        docs: Number of reopens after first_contact_reply_at.
        type: optional<integer>
      first_admin_reply_at:
        docs: Time of first admin reply after first_contact_reply_at.
        type: optional<integer>
      first_assignment_at:
        docs: Time of first assignment after first_contact_reply_at.
        type: optional<integer>
      first_close_at:
        docs: Time of first close after first_contact_reply_at.
        type: optional<integer>
      first_contact_reply_at:
        docs: Time of first text conversation part from a contact.
        type: optional<integer>
      handling_time:
        docs: Time from conversation assignment to conversation close in seconds.
        type: optional<integer>
      last_admin_reply_at:
        docs: Time of the last conversation part from an admin.
        type: optional<integer>
      last_assignment_admin_reply_at:
        docs: Time of first admin reply since most recent assignment.
        type: optional<integer>
      last_assignment_at:
        docs: Time of last assignment after first_contact_reply_at.
        type: optional<integer>
      last_close_at:
        docs: Time of the last conversation close.
        type: optional<integer>
      last_closed_by_id:
        docs: >-
          The last admin who closed the conversation. Returns a reference to an
          Admin object.
        type: optional<string>
      last_contact_reply_at:
        docs: Time of the last conversation part from a contact.
        type: optional<integer>
      median_time_to_reply:
        docs: >-
          Median based on all admin replies after a contact reply. Subtracts out
          of business hours. In seconds.
        type: optional<integer>
      time_to_admin_reply:
        docs: >-
          Duration until first admin reply. Subtracts out of business hours. In
          seconds.
        type: optional<integer>
      time_to_assignment:
        docs: Duration until last assignment before first admin reply. In seconds.
        type: optional<integer>
      time_to_first_close:
        docs: >-
          Duration until conversation was closed first time. Subtracts out of
          business hours. In seconds.
        type: optional<integer>
      time_to_last_close:
        docs: >-
          Duration until conversation was closed last time. Subtracts out of
          business hours. In seconds.
        type: optional<integer>
      type:
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ConversationTeammates:
    docs: >-
      The list of teammates who participated in the conversation (wrote at least
      one conversation part).
    properties:
      teammates:
        docs: >-
          The list of teammates who participated in the conversation (wrote at
          least one conversation part).
        type: optional<list<Reference>>
      type:
        docs: The type of the object - `admin.list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateArticleRequest:
    docs: You can create an Article
    properties:
      author_id:
        docs: >-
          The id of the author of the article. For multilingual articles, this
          will be the id of the author of the default language's content. Must
          be a teammate on the help center's workspace.
        type: integer
      body:
        docs: >-
          The content of the article. For multilingual articles, this will be
          the body of the default language's content.
        type: optional<string>
      description:
        docs: >-
          The description of the article. For multilingual articles, this will
          be the description of the default language's content.
        type: optional<string>
      parent_id:
        docs: >-
          The id of the article's parent collection or section. An article
          without this field stands alone.
        type: optional<integer>
      parent_type:
        docs: The type of parent, which can either be a `collection` or `section`.
        type: optional<string>
      state:
        docs: >-
          Whether the article will be `published` or will be a `draft`. Defaults
          to draft. For multilingual articles, this will be the state of the
          default language's content.
        type: optional<CreateArticleRequestState>
      title:
        docs: >-
          The title of the article.For multilingual articles, this will be the
          title of the default language's content.
        type: string
      translated_content:
        type: optional<ArticleTranslatedContent>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateArticleRequestState:
    docs: >-
      Whether the article will be `published` or will be a `draft`. Defaults to
      draft. For multilingual articles, this will be the state of the default
      language's content.
    enum:
      - published
      - draft
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateDataAttributeRequest:
    discriminated: false
    docs: ''
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: CreateDataAttributeRequestOptions
      - type: CreateDataAttributeRequestOne
  CreateDataAttributeRequestOne:
    inline: true
    properties:
      data_type:
        type: optional<CreateDataAttributeRequestOneDataType>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateDataAttributeRequestOneDataType:
    enum:
      - string
      - integer
      - float
      - boolean
      - datetime
      - date
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateDataAttributeRequestOptions:
    inline: true
    properties:
      data_type:
        type: optional<literal<"options">>
      options:
        docs: >-
          Array of objects representing the options of the list, with `value` as
          the key and the option as the value. At least two options are
          required.
        type: list<CreateDataAttributeRequestOptionsOptionsItem>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateDataAttributeRequestOptionsOptionsItem:
    inline: true
    properties:
      value: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateInternalArticleRequest:
    docs: You can create an Internal Article
    properties:
      author_id:
        docs: The id of the author of the article.
        type: integer
      body:
        docs: The content of the article.
        type: optional<string>
      owner_id:
        docs: The id of the owner of the article.
        type: integer
      title:
        docs: The title of the article.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateOrUpdateCompanyRequest:
    docs: You can create or update a Company
    properties:
      company_id:
        docs: The company id you have defined for the company. Can't be updated
        type: optional<string>
      custom_attributes:
        docs: >-
          A hash of key/value pairs containing any other data about the company
          you want Intercom to store.
        type: optional<map<string, string>>
      industry:
        docs: The industry that this company operates in.
        type: optional<string>
      monthly_spend:
        docs: >-
          How much revenue the company generates for your business. Note that
          this will truncate floats. i.e. it only allow for whole integers,
          155.98 will be truncated to 155. Note that this has an upper limit of
          2**31-1 or 2147483647..
        type: optional<integer>
      name:
        docs: The name of the Company
        type: optional<string>
      plan:
        docs: The name of the plan you have associated with the company.
        type: optional<string>
      remote_created_at:
        docs: The time the company was created by you.
        type: optional<integer>
      size:
        docs: The number of employees in this company.
        type: optional<integer>
      website:
        docs: >-
          The URL for this company's website. Please note that the value
          specified here is not validated. Accepts any string.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateOrUpdateTagRequest:
    docs: You can create or update an existing tag.
    properties:
      id:
        docs: The id of tag to updates.
        type: optional<string>
      name:
        docs: >-
          The name of the tag, which will be created if not found, or the new
          name for the tag if this is an update request. Names are case
          insensitive.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreatePhoneSwitchRequest:
    docs: You can create an phone switch
    properties:
      custom_attributes:
        type: optional<CustomAttributes>
      phone:
        docs: >-
          Phone number in E.164 format, that will receive the SMS to continue
          the conversation in the Messenger.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketReplyWithCommentRequest:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: ContactReplyTicketRequest
      - type: AdminReplyTicketRequest
  CreateTicketRequestAssignment:
    inline: true
    properties:
      admin_assignee_id:
        docs: >-
          The ID of the admin to which the ticket is assigned. If not provided,
          the ticket will be unassigned.
        type: optional<string>
      team_assignee_id:
        docs: >-
          The ID of the team to which the ticket is assigned. If not provided,
          the ticket will be unassigned.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketRequestBody:
    docs: You can create a Ticket
    properties:
      assignment:
        type: optional<CreateTicketRequestAssignment>
      company_id:
        docs: >-
          The ID of the company that the ticket is associated with. The unique
          identifier for the company which is given by Intercom
        type: optional<string>
      contacts:
        docs: >-
          The list of contacts (users or leads) affected by this ticket.
          Currently only one is allowed
        type: list<CreateTicketRequestContactsItem>
      conversation_to_link_id:
        docs: >-
          The ID of the conversation you want to link to the ticket. Here are
          the valid ways of linking two tickets:
           - conversation | back-office ticket
           - customer tickets | non-shared back-office ticket
           - conversation | tracker ticket
           - customer ticket | tracker ticket
        type: optional<string>
      created_at:
        docs: >-
          The time the ticket was created. If not provided, the current time
          will be used.
        type: optional<integer>
      ticket_type_id:
        docs: The ID of the type of ticket you want to create
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketRequestContactsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: CreateTicketRequestContactsItemId
      - type: CreateTicketRequestContactsItemExternalId
      - type: CreateTicketRequestContactsItemEmail
  CreateTicketRequestContactsItemEmail:
    inline: true
    properties:
      email:
        docs: >-
          The email you have defined for the contact who is being added as a
          participant. If a contact with this email does not exist, one will be
          created.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketRequestContactsItemExternalId:
    inline: true
    properties:
      external_id:
        docs: >-
          The external_id you have defined for the contact who is being added as
          a participant.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketRequestContactsItemId:
    inline: true
    properties:
      id:
        docs: The identifier for the contact as given by Intercom.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketTypeRequest:
    docs: |
      The request payload for creating a ticket type.
        You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
    properties:
      category:
        docs: Category of the Ticket Type.
        type: optional<CreateTicketTypeRequestCategory>
      description:
        docs: The description of the ticket type.
        type: optional<string>
      icon:
        default: 🎟️
        docs: The icon of the ticket type.
        type: optional<string>
      is_internal:
        default: false
        docs: >-
          Whether the tickets associated with this ticket type are intended for
          internal use only or will be shared with customers. This is currently
          a limited attribute.
        type: optional<boolean>
      name:
        docs: The name of the ticket type.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CreateTicketTypeRequestCategory:
    docs: Category of the Ticket Type.
    enum:
      - Customer
      - name: BackOffice
        value: Back-office
      - Tracker
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CursorPages:
    docs: >
      Cursor-based pagination is a technique used in the Intercom API to
      navigate through large amounts of data.

      A "cursor" or pointer is used to keep track of the current position in the
      result set, allowing the API to return the data in small chunks or "pages"
      as needed.
    properties:
      next:
        type: optional<StartingAfterPaging>
      page:
        docs: The current page
        type: optional<integer>
      per_page:
        docs: Number of results per page
        type: optional<integer>
      total_pages:
        docs: Total number of pages
        type: optional<integer>
      type:
        docs: the type of object `pages`.
        type: optional<literal<"pages">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomActionFinished:
    docs: >-
      Contains details about final status of the completed action for
      conversation part type <code>custom_action_finished</code>.
    properties:
      action:
        type: optional<CustomActionFinishedAction>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomActionFinishedAction:
    inline: true
    properties:
      name:
        docs: Name of the action
        type: optional<string>
      result:
        docs: Status of the action
        type: optional<CustomActionFinishedActionResult>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomActionFinishedActionResult:
    docs: Status of the action
    enum:
      - success
      - failed
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomActionStarted:
    docs: >-
      Contains details about name of the action that was initiated for
      conversation part type <code>custom_action_started</code>.
    properties:
      action:
        type: optional<CustomActionStartedAction>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomActionStartedAction:
    inline: true
    properties:
      name:
        docs: Name of the action
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomAttributes:
    docs: >-
      An object containing the different custom attributes associated to the
      conversation as key-value pairs. For relationship attributes the value
      will be a list of custom object instance models.
    type: map<string, CustomAttributesValue>
  CustomAttributesValue:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - string
      - integer
      - Datetime
      - type: CustomObjectInstanceList
  CustomChannelAttribute:
    properties:
      id:
        docs: Identifier for the attribute being collected.
        type: string
      value:
        docs: Value provided by the user for the attribute.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomChannelBaseEvent:
    properties:
      contact:
        type: CustomChannelContact
      event_id:
        docs: Unique identifier for the event.
        type: string
      external_conversation_id:
        docs: Identifier for the conversation in your application.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomChannelContact:
    properties:
      email:
        docs: Email address of the contact. Required for user type.
        type: optional<string>
        validation:
          format: email
      external_id:
        docs: >-
          External identifier for the contact. Intercom will take care of the
          mapping of your external_id with our internal ones so you don't have
          to worry about it.
        type: string
      name:
        docs: Name of the contact. Required for user type.
        type: optional<string>
      type:
        docs: Type of contact, must be "user" or "lead".
        type: CustomChannelContactType
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomChannelContactType:
    docs: Type of contact, must be "user" or "lead".
    enum:
      - user
      - lead
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomChannelNotificationResponse:
    properties:
      contact_id:
        docs: The Intercom contact ID mapped to the external contact ID
        type: string
      conversation_id:
        docs: The Intercom conversation ID mapped to the external conversation ID
        type: string
      external_contact_id:
        docs: The external contact ID provided in the notification request
        type: string
      external_conversation_id:
        docs: The external conversation ID provided in the notification request
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomerRequest:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: CustomerRequestIntercomUserId
      - type: CustomerRequestUserId
      - type: CustomerRequestEmail
  CustomerRequestEmail:
    inline: true
    properties:
      email:
        docs: >-
          The email you have defined for the contact who is being added as a
          participant.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomerRequestIntercomUserId:
    inline: true
    properties:
      intercom_user_id:
        docs: The identifier for the contact as given by Intercom.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomerRequestUserId:
    inline: true
    properties:
      user_id:
        docs: >-
          The external_id you have defined for the contact who is being added as
          a participant.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomObjectInstanceDeleted:
    docs: deleted custom object instance object
    properties:
      deleted:
        docs: Whether the Custom Object instance is deleted or not.
        type: optional<boolean>
      id:
        docs: The Intercom defined id representing the Custom Object instance.
        type: optional<string>
      object:
        docs: >-
          The unique identifier of the Custom Object type that defines the
          structure of the Custom Object instance.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  CustomObjectInstanceList:
    docs: >-
      The list of associated custom object instances for a given reference
      attribute on the parent object.
    properties:
      instances:
        docs: >-
          The list of associated custom object instances for a given reference
          attribute on the parent object.
        type: >-
          optional<list<optional<unstableCustomObjectInstances.CustomObjectInstance>>>
      type:
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataAttributeList:
    docs: >-
      A list of all data attributes belonging to a workspace for contacts,
      companies or conversations.
    properties:
      data:
        docs: A list of data attributes
        type: optional<list<unstableDataAttributes.DataAttribute>>
      type:
        docs: The type of the object
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataEventList:
    docs: This will return a list of data events for the App.
    properties:
      events:
        docs: A list of data events
        type: optional<list<unstableDataEvents.DataEvent>>
      pages:
        docs: Pagination
        type: optional<DataEventListPages>
      type:
        docs: The type of the object
        type: optional<literal<"event.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataEventListPages:
    docs: Pagination
    inline: true
    properties:
      next: optional<string>
      since: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataEventSummary:
    docs: This will return a summary of data events for the App.
    properties:
      email:
        docs: The email address of the user
        type: optional<string>
      events:
        docs: A summary of data events
        type: optional<list<optional<DataEventSummaryItem>>>
      intercom_user_id:
        docs: The Intercom user ID of the user
        type: optional<string>
      type:
        docs: The type of the object
        type: optional<literal<"event.summary">>
      user_id:
        docs: The user ID of the user
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataEventSummaryItem:
    docs: This will return a summary of a data event for the App.
    properties:
      count:
        docs: The number of times the event was sent
        type: optional<integer>
      description:
        docs: The description of the event
        type: optional<string>
      first:
        docs: The first time the event was sent
        type: optional<string>
      last:
        docs: The last time the event was sent
        type: optional<string>
      name:
        docs: The name of the event
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DataExportCsv:
    docs: A CSV output file
    properties:
      company_id:
        docs: >-
          The company ID of the user in relation to the message that was sent.
          Will return -1 if no company is present.
        type: optional<string>
      content_id:
        docs: >-
          The specific content that was received. In an A/B test each version
          has its own Content ID.
        type: optional<string>
      content_title:
        docs: The title of the content you see in your Intercom workspace.
        type: optional<string>
      content_type:
        docs: Email, Chat, Post etc.
        type: optional<string>
      email:
        docs: The users email who was sent the message.
        type: optional<string>
      first_click:
        docs: >-
          The first time the series the user clicked on a link within this
          message.
        type: optional<integer>
      first_completion:
        docs: >-
          The first time a user completed this message if the content was able
          to be completed e.g. Tours, Surveys.
        type: optional<integer>
      first_dismisall:
        docs: The first time the series the user dismissed this message.
        type: optional<integer>
      first_goal_success:
        docs: >-
          The first time the user met this messages associated goal if one
          exists.
        type: optional<integer>
      first_hard_bounce:
        docs: The first time this message hard bounced for this user
        type: optional<integer>
      first_open:
        docs: The first time the user opened this message.
        type: optional<integer>
      first_reply:
        docs: >-
          The first time a user replied to this message if the content was able
          to receive replies.
        type: optional<integer>
      first_series_completion:
        docs: >-
          The first time the series this message was a part of was completed by
          the user.
        type: optional<integer>
      first_series_disengagement:
        docs: >-
          The first time the series this message was a part of was disengaged by
          the user.
        type: optional<integer>
      first_series_exit:
        docs: >-
          The first time the series this message was a part of was exited by the
          user.
        type: optional<integer>
      first_unsubscribe:
        docs: The first time the user unsubscribed from this message.
        type: optional<integer>
      name:
        docs: The full name of the user receiving the message
        type: optional<string>
      node_id:
        docs: >-
          The id of the series node that this ruleset is associated with. Each
          block in a series has a corresponding node_id.
        type: optional<string>
      receipt_id:
        docs: >-
          ID for this receipt. Will be included with any related stats in other
          files to identify this specific delivery of a message.
        type: optional<string>
      received_at:
        docs: Timestamp for when the receipt was recorded.
        type: optional<integer>
      ruleset_id:
        docs: The id of the message.
        type: optional<string>
      ruleset_version_id:
        docs: >-
          As you edit content we record new versions. This ID can help you
          determine which version of a piece of content that was received.
        type: optional<string>
      series_id:
        docs: >-
          The id of the series that this content is part of. Will return -1 if
          not part of a series.
        type: optional<string>
      series_title:
        docs: The title of the series that this content is part of.
        type: optional<string>
      user_external_id:
        docs: The external_user_id of the user who was sent the message
        type: optional<string>
      user_id:
        docs: The user_id of the user who was sent the message.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Datetime:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - docs: A date and time following the ISO8601 notation.
        type: datetime
      - docs: A date and time as UNIX timestamp notation.
        type: integer
  DeletedArticleObject:
    docs: Response returned when an object is deleted
    properties:
      deleted:
        docs: Whether the article was deleted successfully or not.
        type: optional<boolean>
      id:
        docs: The unique identifier for the article which you provided in the URL.
        type: optional<string>
      object:
        docs: The type of object which was deleted. - article
        type: optional<literal<"article">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DeletedCollectionObject:
    docs: Response returned when an object is deleted
    properties:
      deleted:
        docs: Whether the collection was deleted successfully or not.
        type: optional<boolean>
      id:
        docs: >-
          The unique identifier for the collection which you provided in the
          URL.
        type: optional<string>
      object:
        docs: The type of object which was deleted. - `collection`
        type: optional<literal<"collection">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DeletedCompanyObject:
    docs: Response returned when an object is deleted
    properties:
      deleted:
        docs: Whether the company was deleted successfully or not.
        type: optional<boolean>
      id:
        docs: The unique identifier for the company which is given by Intercom.
        type: optional<string>
      object:
        docs: The type of object which was deleted. - `company`
        type: optional<literal<"company">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DeletedInternalArticleObject:
    docs: Response returned when an object is deleted
    properties:
      deleted:
        docs: Whether the internal article was deleted successfully or not.
        type: optional<boolean>
      id:
        docs: >-
          The unique identifier for the internal article which you provided in
          the URL.
        type: optional<string>
      object:
        docs: The type of object which was deleted. - internal_article
        type: optional<literal<"internal_article">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  DeletedObject:
    docs: Response returned when an object is deleted
    properties:
      deleted:
        docs: Whether the news item was deleted successfully or not.
        type: optional<boolean>
      id:
        docs: The unique identifier for the news item which you provided in the URL.
        type: optional<string>
      object:
        docs: The type of object which was deleted - news-item.
        type: optional<literal<"news-item">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  EmailAddressHeader:
    docs: >-
      Contains data for an email address header for a conversation part that was
      sent as an email.
    properties:
      email_address:
        docs: The email address
        type: optional<string>
      name:
        docs: The name associated with the email address
        type: optional<string>
      type:
        docs: The type of email address header
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  EmailMessageMetadata:
    docs: Contains metadata if the message was sent as an email
    properties:
      email_address_headers:
        docs: A list of an email address headers.
        type: optional<list<EmailAddressHeader>>
      subject:
        docs: The subject of the email
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Error:
    docs: >-
      The API will return an Error List for a failed request, which will contain
      one or more Error objects.
    properties:
      errors:
        docs: An array of one or more error objects
        type: list<ErrorErrorsItem>
      request_id:
        docs: ''
        type: optional<string>
        validation:
          format: uuid
      type:
        docs: The type is error.list
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ErrorErrorsItem:
    inline: true
    properties:
      code:
        docs: >-
          A string indicating the kind of error, used to further qualify the
          HTTP response code
        type: string
      field:
        docs: >-
          Optional. Used to identify a particular field or query parameter that
          was in error.
        type: optional<string>
      message:
        docs: Optional. Human readable description of the error.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  EventDetails:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: ConversationAttributeUpdatedByWorkflow
      - type: ConversationAttributeUpdatedByAdmin
      - type: CustomActionStarted
      - type: CustomActionFinished
      - type: OperatorWorkflowEvent
  FileAttribute:
    docs: The value describing a file upload set for a custom attribute
    properties:
      content_type:
        docs: The type of file
        type: optional<string>
      filesize:
        docs: The size of the file in bytes
        type: optional<integer>
      height:
        docs: The height of the file in pixels, if applicable
        type: optional<integer>
      name:
        docs: The name of the file
        type: optional<string>
      type:
        type: optional<string>
      url:
        docs: >-
          The url of the file. This is a temporary URL and will expire after 30
          minutes.
        type: optional<string>
      width:
        docs: The width of the file in pixels, if applicable
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  GroupContent:
    docs: The Content of a Group.
    properties:
      description:
        docs: The description of the collection. Only available for collections.
        type: optional<string>
      name:
        docs: The name of the collection or section.
        type: optional<string>
      type:
        docs: The type of object - `group_content` .
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  GroupTranslatedContent:
    docs: >-
      The Translated Content of an Group. The keys are the locale codes and the
      values are the translated content of the Group.
    properties:
      ar:
        docs: The content of the group in Arabic
        type: optional<GroupContent>
      bg:
        docs: The content of the group in Bulgarian
        type: optional<GroupContent>
      bs:
        docs: The content of the group in Bosnian
        type: optional<GroupContent>
      ca:
        docs: The content of the group in Catalan
        type: optional<GroupContent>
      cs:
        docs: The content of the group in Czech
        type: optional<GroupContent>
      da:
        docs: The content of the group in Danish
        type: optional<GroupContent>
      de:
        docs: The content of the group in German
        type: optional<GroupContent>
      el:
        docs: The content of the group in Greek
        type: optional<GroupContent>
      en:
        docs: The content of the group in English
        type: optional<GroupContent>
      es:
        docs: The content of the group in Spanish
        type: optional<GroupContent>
      et:
        docs: The content of the group in Estonian
        type: optional<GroupContent>
      fi:
        docs: The content of the group in Finnish
        type: optional<GroupContent>
      fr:
        docs: The content of the group in French
        type: optional<GroupContent>
      he:
        docs: The content of the group in Hebrew
        type: optional<GroupContent>
      hr:
        docs: The content of the group in Croatian
        type: optional<GroupContent>
      hu:
        docs: The content of the group in Hungarian
        type: optional<GroupContent>
      id:
        docs: The content of the group in Indonesian
        type: optional<GroupContent>
      it:
        docs: The content of the group in Italian
        type: optional<GroupContent>
      ja:
        docs: The content of the group in Japanese
        type: optional<GroupContent>
      ko:
        docs: The content of the group in Korean
        type: optional<GroupContent>
      lt:
        docs: The content of the group in Lithuanian
        type: optional<GroupContent>
      lv:
        docs: The content of the group in Latvian
        type: optional<GroupContent>
      mn:
        docs: The content of the group in Mongolian
        type: optional<GroupContent>
      nb:
        docs: The content of the group in Norwegian
        type: optional<GroupContent>
      nl:
        docs: The content of the group in Dutch
        type: optional<GroupContent>
      pl:
        docs: The content of the group in Polish
        type: optional<GroupContent>
      pt:
        docs: The content of the group in Portuguese (Portugal)
        type: optional<GroupContent>
      pt-BR:
        docs: The content of the group in Portuguese (Brazil)
        type: optional<GroupContent>
      ro:
        docs: The content of the group in Romanian
        type: optional<GroupContent>
      ru:
        docs: The content of the group in Russian
        type: optional<GroupContent>
      sl:
        docs: The content of the group in Slovenian
        type: optional<GroupContent>
      sr:
        docs: The content of the group in Serbian
        type: optional<GroupContent>
      sv:
        docs: The content of the group in Swedish
        type: optional<GroupContent>
      tr:
        docs: The content of the group in Turkish
        type: optional<GroupContent>
      type:
        docs: The type of object - group_translated_content.
        type: optional<string>
      vi:
        docs: The content of the group in Vietnamese
        type: optional<GroupContent>
      zh-CN:
        docs: The content of the group in Chinese (China)
        type: optional<GroupContent>
      zh-TW:
        docs: The content of the group in Chinese (Taiwan)
        type: optional<GroupContent>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  IntercomVersion:
    default: Unstable
    docs: >-
      Intercom API version.</br>By default, it's equal to the version set in the
      app package.
    enum:
      - name: One0
        value: '1.0'
      - name: One1
        value: '1.1'
      - name: One2
        value: '1.2'
      - name: One3
        value: '1.3'
      - name: One4
        value: '1.4'
      - name: Two0
        value: '2.0'
      - name: Two1
        value: '2.1'
      - name: Two2
        value: '2.2'
      - name: Two3
        value: '2.3'
      - name: Two4
        value: '2.4'
      - name: Two5
        value: '2.5'
      - name: Two6
        value: '2.6'
      - name: Two7
        value: '2.7'
      - name: Two8
        value: '2.8'
      - name: Two9
        value: '2.9'
      - name: Two10
        value: '2.10'
      - name: Two11
        value: '2.11'
      - name: Two12
        value: '2.12'
      - name: Two13
        value: '2.13'
      - name: Two14
        value: '2.14'
      - Unstable
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  IntercomVersionUnstable:
    docs: >-
      Unstable Intercom API version. Used for closed beta endpoints or other
      features under managed availability.
    type: literal<"unstable">
  InternalArticleList:
    docs: This will return a list of internal articles for the App.
    properties:
      data:
        docs: An array of Internal Article objects
        type: optional<list<unstableInternalArticles.InternalArticleListItem>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of internal articles.
        type: optional<integer>
      type:
        docs: The type of the object - `list`.
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  LinkedObject:
    docs: A linked conversation or ticket.
    properties:
      category:
        docs: Category of the Linked Ticket Object.
        type: optional<string>
      id:
        docs: The ID of the linked object
        type: optional<string>
      type:
        docs: ticket or conversation
        type: optional<LinkedObjectType>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  LinkedObjectList:
    docs: >-
      An object containing metadata about linked conversations and linked
      tickets. Up to 1000 can be returned.
    properties:
      data:
        docs: An array containing the linked conversations and linked tickets.
        type: optional<list<LinkedObject>>
      has_more:
        docs: Whether or not there are more linked objects than returned.
        type: optional<boolean>
      total_count:
        docs: The total number of linked objects.
        type: optional<integer>
      type:
        docs: Always list.
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  LinkedObjectType:
    docs: ticket or conversation
    enum:
      - ticket
      - conversation
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MultipleFilterSearchRequest:
    docs: Search using Intercoms Search APIs with more than one filter.
    properties:
      operator:
        docs: An operator to allow boolean inspection between multiple fields.
        type: optional<MultipleFilterSearchRequestOperator>
      value:
        type: optional<MultipleFilterSearchRequestValue>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MultipleFilterSearchRequestOperator:
    docs: An operator to allow boolean inspection between multiple fields.
    enum:
      - AND
      - OR
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  MultipleFilterSearchRequestValue:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - docs: Add mutiple filters.
        type: list<MultipleFilterSearchRequest>
      - docs: Add a single filter field.
        type: list<SingleFilterSearchRequest>
  NewsItemRequest:
    docs: >-
      A News Item is a content type in Intercom enabling you to announce product
      updates, company news, promotions, events and more with your customers.
    properties:
      body:
        docs: The news item body, which may contain HTML.
        type: optional<string>
      deliver_silently:
        docs: >-
          When set to `true`, the news item will appear in the messenger
          newsfeed without showing a notification badge.
        type: optional<boolean>
      labels:
        docs: Label names displayed to users to categorize the news item.
        type: optional<list<string>>
      newsfeed_assignments:
        docs: A list of newsfeed_assignments to assign to the specified newsfeed.
        type: optional<list<unstableNews.NewsfeedAssignment>>
      reactions:
        docs: >-
          Ordered list of emoji reactions to the news item. When empty,
          reactions are disabled.
        type: optional<list<optional<string>>>
      sender_id:
        docs: >-
          The id of the sender of the news item. Must be a teammate on the
          workspace.
        type: integer
      state:
        docs: >-
          News items will not be visible to your users in the assigned newsfeeds
          until they are set live.
        type: optional<NewsItemRequestState>
      title:
        docs: The title of the news item.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  NewsItemRequestState:
    docs: >-
      News items will not be visible to your users in the assigned newsfeeds
      until they are set live.
    enum:
      - draft
      - live
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  NoteList:
    docs: A paginated list of notes associated with a contact.
    properties:
      data:
        docs: An array of notes.
        type: optional<list<unstableNotes.Note>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of notes.
        type: optional<integer>
      type:
        docs: String representing the object's type. Always has the value `list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  NotFoundErrorBody:
    properties:
      errors:
        docs: An array of one or more error objects
        type: list<NotFoundErrorBodyErrorsItem>
      request_id:
        docs: ''
        type: optional<string>
        validation:
          format: uuid
      type:
        docs: The type is error.list
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  NotFoundErrorBodyErrorsItem:
    inline: true
    properties:
      code:
        docs: ticket_not_found
        type: string
      message:
        docs: Ticket not found
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  OpenConversationRequest:
    docs: Payload of the request to open a conversation
    properties:
      admin_id:
        docs: The id of the admin who is performing the action.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  OperatorWorkflowEvent:
    docs: >-
      Contains details about name of the workflow for conversation part type
      <code>operator_workflow_event</code>.
    properties:
      event:
        type: optional<OperatorWorkflowEventEvent>
      workflow:
        type: optional<OperatorWorkflowEventWorkflow>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  OperatorWorkflowEventEvent:
    inline: true
    properties:
      result:
        docs: Result of the workflow event
        type: optional<string>
      type:
        docs: Type of the workflow event initiated
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  OperatorWorkflowEventWorkflow:
    inline: true
    properties:
      name:
        docs: The name of the workflow
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  PagesLink:
    docs: >
      The majority of list resources in the API are paginated to allow clients
      to traverse data over multiple requests.


      Their responses are likely to contain a pages object that hosts pagination
      links which a client can use to paginate through the data without having
      to construct a query. The link relations for the pages field are as
      follows.
    properties:
      next:
        docs: >-
          A link to the next page of results. A response that does not contain a
          next link does not have further data to fetch.
        type: optional<string>
        validation:
          format: uri
      page:
        type: optional<integer>
      per_page:
        type: optional<integer>
      total_pages:
        type: optional<integer>
      type:
        type: optional<literal<"pages">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  PaginatedResponse:
    docs: Paginated Response
    properties:
      data:
        docs: An array of Objects
        type: optional<list<PaginatedResponseDataItem>>
      pages:
        type: optional<CursorPages>
      total_count:
        docs: A count of the total number of objects.
        type: optional<integer>
      type:
        docs: The type of object
        type: optional<PaginatedResponseType>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  PaginatedResponseDataItem:
    base-properties: {}
    discriminant: type
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      news-item:
        type: unstableNews.NewsItem
      newsfeed:
        type: unstableNews.Newsfeed
  PaginatedResponseType:
    docs: The type of object
    enum:
      - list
      - name: ConversationList
        value: conversation.list
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  PartAttachment:
    docs: The file attached to a part
    properties:
      content_type:
        docs: The content type of the attachment
        type: optional<string>
      filesize:
        docs: The size of the attachment
        type: optional<integer>
      height:
        docs: The height of the attachment
        type: optional<integer>
      name:
        docs: The name of the attachment
        type: optional<string>
      type:
        docs: The type of attachment
        type: optional<string>
      url:
        docs: The URL of the attachment
        type: optional<string>
      width:
        docs: The width of the attachment
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  PhoneSwitch:
    docs: Phone Switch Response
    properties:
      phone:
        docs: >-
          Phone number in E.164 format, that has received the SMS to continue
          the conversation in the Messenger.
        type: optional<string>
      type:
        docs: ''
        type: optional<literal<"phone_call_redirect">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  QuickReplyOption:
    properties:
      text:
        docs: The text to display in this quick reply option.
        type: string
      uuid:
        docs: >-
          A unique identifier for this quick reply option. This value will be
          available within the metadata of the comment conversation part that is
          created when a user clicks on this reply option.
        type: string
        validation:
          format: uuid
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Recipient:
    docs: A recipient of a message
    properties:
      id:
        docs: The identifier for the contact which is given by Intercom.
        type: string
      type:
        docs: The role associated to the contact - `user` or `lead`.
        type: RecipientType
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  RecipientType:
    docs: The role associated to the contact - `user` or `lead`.
    enum:
      - user
      - lead
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  RedactConversationRequest:
    base-properties: {}
    discriminant: type
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      conversation_part:
        docs: Payload of the request to redact a conversation part
        type: RedactConversationRequestConversationPart
      source:
        docs: Payload of the request to redact a conversation source
        type: RedactConversationRequestSource
  RedactConversationRequestConversationPart:
    docs: Payload of the request to redact a conversation part
    inline: true
    properties:
      conversation_id:
        docs: The id of the conversation.
        type: string
      conversation_part_id:
        docs: The id of the conversation_part.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  RedactConversationRequestSource:
    docs: Payload of the request to redact a conversation source
    inline: true
    properties:
      conversation_id:
        docs: The id of the conversation.
        type: string
      source_id:
        docs: The id of the source.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Reference:
    docs: reference to another object
    properties:
      id:
        docs: ''
        type: optional<string>
      type:
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  ReplyConversationRequestBody:
    discriminated: false
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: ContactReplyConversationRequest
      - type: AdminReplyConversationRequest
  SearchRequest:
    docs: Search using Intercoms Search APIs.
    properties:
      pagination:
        type: optional<StartingAfterPaging>
      query: SearchRequestQuery
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SearchRequestQuery:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: SingleFilterSearchRequest
      - type: MultipleFilterSearchRequest
  SegmentList:
    docs: >-
      This will return a list of Segment Objects. The result may also have a
      pages object if the response is paginated.
    properties:
      pages:
        docs: >-
          A pagination object, which may be empty, indicating no further pages
          to fetch.
        type: optional<map<string, unknown>>
      segments:
        docs: A list of Segment objects
        type: optional<list<unstableSegments.Segment>>
      type:
        docs: The type of the object
        type: optional<literal<"segment.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SingleFilterSearchRequest:
    docs: Search using Intercoms Search APIs with a single filter.
    properties:
      field:
        docs: The accepted field that you want to search on.
        type: optional<string>
      operator:
        docs: >-
          The accepted operators you can use to define how you want to search
          for the value.
        type: optional<SingleFilterSearchRequestOperator>
      value:
        docs: The value that you want to search on.
        type: optional<SingleFilterSearchRequestValue>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SingleFilterSearchRequestOperator:
    docs: >-
      The accepted operators you can use to define how you want to search for
      the value.
    enum:
      - name: EQUAL_TO
        value: '='
      - name: NOT_EQUALS
        value: '!='
      - IN
      - NIN
      - name: LESS_THAN
        value: <
      - name: GREATER_THAN
        value: '>'
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SingleFilterSearchRequestValue:
    discriminated: false
    docs: The value that you want to search on.
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - string
      - integer
      - list<SingleFilterSearchRequestValueItem>
  SingleFilterSearchRequestValueItem:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - string
      - integer
  SlaApplied:
    docs: >
      The SLA Applied object contains the details for which SLA has been applied
      to this conversation.

      Important: if there are any canceled sla_events for the conversation -
      meaning an SLA has been manually removed from a conversation, the
      sla_status will always be returned as null.
    properties:
      sla_name:
        docs: The name of the SLA as given by the teammate when it was created.
        type: optional<string>
      sla_status:
        docs: |-
          SLA statuses:
                      - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
                      - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
                      - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.
        type: optional<SlaAppliedSlaStatus>
      type:
        docs: object type
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SlaAppliedSlaStatus:
    docs: |-
      SLA statuses:
                  - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
                  - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
                  - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.
    enum:
      - hit
      - missed
      - cancelled
      - active
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SnoozeConversationRequest:
    docs: Payload of the request to snooze a conversation
    properties:
      admin_id:
        docs: The id of the admin who is performing the action.
        type: string
      snoozed_until:
        docs: The time you want the conversation to reopen.
        type: integer
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SocialProfile:
    docs: >-
      A Social Profile allows you to label your contacts, companies, and
      conversations and list them using that Social Profile.
    properties:
      name:
        docs: The name of the Social media profile
        type: optional<string>
      type:
        docs: value is "social_profile"
        type: optional<string>
      url:
        docs: The name of the Social media profile
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  StartingAfterPaging:
    properties:
      per_page:
        docs: The number of results to fetch per page.
        type: optional<integer>
      starting_after:
        docs: The cursor to use in the next request to get the next page of results.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  SubscriptionTypeList:
    docs: A list of subscription type objects.
    properties:
      data:
        docs: A list of subscription type objects associated with the workspace .
        type: optional<list<unstableSubscriptionTypes.SubscriptionType>>
      type:
        docs: The type of the object
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TagCompanyRequest:
    docs: You can tag a single company or a list of companies.
    properties:
      companies:
        docs: The id or company_id of the company can be passed as input parameters.
        type: list<TagCompanyRequestCompaniesItem>
      name:
        docs: The name of the tag, which will be created if not found.
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TagCompanyRequestCompaniesItem:
    inline: true
    properties:
      company_id:
        docs: The company id you have defined for the company.
        type: optional<string>
      id:
        docs: The Intercom defined id representing the company.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TagList:
    docs: A list of tags objects in the workspace.
    properties:
      data:
        docs: A list of tags objects associated with the workspace .
        type: optional<list<unstableTags.Tag>>
      type:
        docs: The type of the object
        type: optional<literal<"list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TagMultipleUsersRequest:
    docs: You can tag a list of users.
    properties:
      name:
        docs: The name of the tag, which will be created if not found.
        type: string
      users: list<TagMultipleUsersRequestUsersItem>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TagMultipleUsersRequestUsersItem:
    inline: true
    properties:
      id:
        docs: The Intercom defined id representing the user.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Tags:
    docs: A list of tags objects associated with a conversation
    properties:
      tags:
        docs: A list of tags objects associated with the conversation.
        type: optional<list<unstableTags.Tag>>
      type:
        docs: The type of the object
        type: optional<literal<"tag.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TeamList:
    docs: This will return a list of team objects for the App.
    properties:
      teams:
        docs: A list of team objects
        type: optional<list<unstableTeams.Team>>
      type:
        docs: The type of the object
        type: optional<literal<"team.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TeamPriorityLevel:
    docs: Admin priority levels for teams
    properties:
      primary_team_ids:
        docs: The primary team ids for the team
        type: optional<list<integer>>
      secondary_team_ids:
        docs: The secondary team ids for the team
        type: optional<list<integer>>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketCustomAttributes:
    docs: >-
      An object containing the different attributes associated to the ticket as
      key-value pairs. For the default title and description attributes, the
      keys are `_default_title_` and `_default_description_`.
    type: map<string, TicketCustomAttributesValue>
  TicketCustomAttributesValue:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - optional<string>
      - double
      - boolean
      - list<unknown>
      - type: FileAttribute
  TicketList:
    docs: Tickets are how you track requests from your users.
    properties:
      pages:
        type: optional<CursorPages>
      tickets:
        docs: The list of ticket objects
        type: optional<list<optional<unstableTickets.Ticket>>>
      total_count:
        docs: A count of the total number of objects.
        type: optional<integer>
      type:
        docs: Always ticket.list
        type: optional<literal<"ticket.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketPartAuthor:
    docs: >-
      The author that wrote or triggered the part. Can be a bot, admin, team or
      user.
    properties:
      email:
        docs: The email of the author
        type: optional<string>
        validation:
          format: email
      id:
        docs: The id of the author
        type: optional<string>
      name:
        docs: The name of the author
        type: optional<string>
      type:
        docs: The type of the author
        type: optional<TicketPartAuthorType>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketPartAuthorType:
    docs: The type of the author
    enum:
      - admin
      - bot
      - team
      - user
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketParts:
    docs: >-
      A list of Ticket Part objects for each note and event in the ticket. There
      is a limit of 500 parts.
    properties:
      ticket_parts:
        docs: >-
          A list of Ticket Part objects for each ticket. There is a limit of 500
          parts.
        type: optional<list<unstableTickets.TicketPart>>
      total_count:
        docs: ''
        type: optional<integer>
      type:
        docs: ''
        type: optional<literal<"ticket_part.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketReply:
    docs: A Ticket Part representing a note, comment, or quick_reply on a ticket
    properties:
      attachments:
        docs: A list of attachments for the part.
        type: optional<list<PartAttachment>>
      author:
        type: optional<TicketPartAuthor>
      body:
        docs: The message body, which may contain HTML.
        type: optional<string>
      created_at:
        docs: The time the note was created.
        type: optional<integer>
      id:
        docs: The id representing the part.
        type: optional<string>
      part_type:
        docs: Type of the part
        type: optional<TicketReplyPartType>
      redacted:
        docs: Whether or not the ticket part has been redacted.
        type: optional<boolean>
      type:
        docs: Always ticket_part
        type: optional<literal<"ticket_part">>
      updated_at:
        docs: The last time the note was updated.
        type: optional<integer>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketReplyPartType:
    docs: Type of the part
    enum:
      - note
      - comment
      - quick_reply
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketRequestCustomAttributes:
    docs: >-
      The attributes set on the ticket. When setting the default title and
      description attributes, the attribute keys that should be used are
      `_default_title_` and `_default_description_`. When setting ticket type
      attributes of the list attribute type, the key should be the attribute
      name and the value of the attribute should be the list item id, obtainable
      by [listing the ticket type](ref:get_ticket-types). For example, if the
      ticket type has an attribute called `priority` of type `list`, the key
      should be `priority` and the value of the attribute should be the guid of
      the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).
    type: map<string, TicketRequestCustomAttributesValue>
  TicketRequestCustomAttributesValue:
    discriminated: false
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - optional<string>
      - double
      - boolean
      - list<unknown>
  TicketStateList:
    docs: A list of ticket states associated with a given ticket type.
    properties:
      data:
        docs: A list of ticket states associated with a given ticket type.
        type: optional<list<optional<unstableTickets.TicketStateDetailed>>>
      type:
        docs: String representing the object's type. Always has the value `list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketTypeAttribute:
    docs: >-
      Ticket type attribute, used to define each data field to be captured in a
      ticket.
    properties:
      archived:
        docs: Whether the ticket type attribute is archived or not.
        type: optional<boolean>
      created_at:
        docs: The date and time the ticket type attribute was created.
        type: optional<integer>
      data_type:
        docs: >-
          The type of the data attribute (allowed values: "string list integer
          decimal boolean datetime files")
        type: optional<string>
      default:
        docs: Whether the attribute is built in or not.
        type: optional<boolean>
      description:
        docs: The description of the ticket type attribute
        type: optional<string>
      id:
        docs: The id representing the ticket type attribute.
        type: optional<string>
      input_options:
        docs: Input options for the attribute
        type: optional<map<string, unknown>>
      name:
        docs: The name of the ticket type attribute
        type: optional<string>
      order:
        docs: The order of the attribute against other attributes
        type: optional<integer>
      required_to_create:
        default: false
        docs: Whether the attribute is required or not for teammates.
        type: optional<boolean>
      required_to_create_for_contacts:
        default: false
        docs: Whether the attribute is required or not for contacts.
        type: optional<boolean>
      ticket_type_id:
        docs: The id of the ticket type that the attribute belongs to.
        type: optional<integer>
      type:
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type_attribute`.
        type: optional<string>
      updated_at:
        docs: The date and time the ticket type attribute was last updated.
        type: optional<integer>
      visible_on_create:
        default: true
        docs: Whether the attribute is visible or not to teammates.
        type: optional<boolean>
      visible_to_contacts:
        default: true
        docs: Whether the attribute is visible or not to contacts.
        type: optional<boolean>
      workspace_id:
        docs: The id of the workspace that the ticket type attribute belongs to.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketTypeAttributeList:
    docs: A list of attributes associated with a given ticket type.
    properties:
      ticket_type_attributes:
        docs: A list of ticket type attributes associated with a given ticket type.
        type: optional<list<optional<TicketTypeAttribute>>>
      type:
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type_attributes.list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  TicketTypeList:
    docs: A list of ticket types associated with a given workspace.
    properties:
      data:
        docs: A list of ticket_types associated with a given workspace.
        type: optional<list<optional<unstableTickets.TicketType>>>
      type:
        docs: String representing the object's type. Always has the value `list`.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Translation:
    docs: >-
      A translation object contains the localised details of a subscription
      type.
    properties:
      description:
        docs: The localised description of the subscription type.
        type: optional<string>
      locale:
        docs: >-
          The two character identifier for the language of the translation
          object.
        type: optional<string>
      name:
        docs: The localised name of the subscription type.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UntagCompanyRequest:
    docs: You can tag a single company or a list of companies.
    properties:
      companies:
        docs: The id or company_id of the company can be passed as input parameters.
        type: list<UntagCompanyRequestCompaniesItem>
      name:
        docs: The name of the tag which will be untagged from the company
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UntagCompanyRequestCompaniesItem:
    inline: true
    properties:
      company_id:
        docs: The company id you have defined for the company.
        type: optional<string>
      id:
        docs: The Intercom defined id representing the company.
        type: optional<string>
      untag:
        docs: Always set to true
        type: optional<boolean>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateArticleRequestBody:
    docs: You can Update an Article
    properties:
      author_id:
        docs: >-
          The id of the author of the article. For multilingual articles, this
          will be the id of the author of the default language's content. Must
          be a teammate on the help center's workspace.
        type: optional<integer>
      body:
        docs: >-
          The content of the article. For multilingual articles, this will be
          the body of the default language's content.
        type: optional<string>
      description:
        docs: >-
          The description of the article. For multilingual articles, this will
          be the description of the default language's content.
        type: optional<string>
      parent_id:
        docs: >-
          The id of the article's parent collection or section. An article
          without this field stands alone.
        type: optional<string>
      parent_type:
        docs: The type of parent, which can either be a `collection` or `section`.
        type: optional<string>
      state:
        docs: >-
          Whether the article will be `published` or will be a `draft`. Defaults
          to draft. For multilingual articles, this will be the state of the
          default language's content.
        type: optional<UpdateArticleRequestState>
      title:
        docs: >-
          The title of the article.For multilingual articles, this will be the
          title of the default language's content.
        type: optional<string>
      translated_content:
        type: optional<ArticleTranslatedContent>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateArticleRequestState:
    docs: >-
      Whether the article will be `published` or will be a `draft`. Defaults to
      draft. For multilingual articles, this will be the state of the default
      language's content.
    enum:
      - published
      - draft
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateDataAttributeRequest:
    discriminated: false
    docs: ''
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
    union:
      - type: UpdateDataAttributeRequestOptions
      - unknown
  UpdateDataAttributeRequestOptions:
    inline: true
    properties:
      options:
        docs: >-
          Array of objects representing the options of the list, with `value` as
          the key and the option as the value. At least two options are
          required.
        type: list<UpdateDataAttributeRequestOptionsOptionsItem>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateDataAttributeRequestOptionsOptionsItem:
    inline: true
    properties:
      value: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateTicketTypeRequestBody:
    docs: >
      The request payload for updating a ticket type.

      You can copy the `icon` property for your ticket type from [Twemoji
      Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
    properties:
      archived:
        docs: The archived status of the ticket type.
        type: optional<boolean>
      category:
        docs: Category of the Ticket Type.
        type: optional<UpdateTicketTypeRequestCategory>
      description:
        docs: The description of the ticket type.
        type: optional<string>
      icon:
        default: 🎟️
        docs: The icon of the ticket type.
        type: optional<string>
      is_internal:
        default: false
        docs: >-
          Whether the tickets associated with this ticket type are intended for
          internal use only or will be shared with customers. This is currently
          a limited attribute.
        type: optional<boolean>
      name:
        docs: The name of the ticket type.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  UpdateTicketTypeRequestCategory:
    docs: Category of the Ticket Type.
    enum:
      - Customer
      - name: BackOffice
        value: Back-office
      - Tracker
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  Visitor:
    docs: >-
      Visitors are useful for representing anonymous people that have not yet
      been identified. They usually represent website visitors. Visitors are not
      visible in Intercom platform. The Visitors resource provides methods to
      fetch, update, convert and delete.
    properties:
      anonymous:
        docs: Identifies if this visitor is anonymous.
        type: optional<boolean>
      app_id:
        docs: The id of the app the visitor is associated with.
        type: optional<string>
      avatar:
        type: optional<VisitorAvatar>
      companies:
        type: optional<VisitorCompanies>
      created_at:
        docs: The time the Visitor was added to Intercom.
        type: optional<integer>
      custom_attributes:
        docs: The custom attributes you have set on the Visitor.
        type: optional<map<string, string>>
      do_not_track:
        docs: Identifies if this visitor has do not track enabled.
        type: optional<boolean>
      email:
        docs: The email of the visitor.
        type: optional<string>
        validation:
          format: email
      has_hard_bounced:
        docs: Identifies if this visitor has had a hard bounce.
        type: optional<boolean>
      id:
        docs: The Intercom defined id representing the Visitor.
        type: optional<string>
      las_request_at:
        docs: The time the Lead last recorded making a request.
        type: optional<integer>
      location_data:
        type: optional<VisitorLocationData>
      marked_email_as_spam:
        docs: Identifies if this visitor has marked an email as spam.
        type: optional<boolean>
      name:
        docs: The name of the visitor.
        type: optional<string>
      owner_id:
        docs: The id of the admin that owns the Visitor.
        type: optional<string>
      phone:
        docs: The phone number of the visitor.
        type: optional<string>
      pseudonym:
        docs: The pseudonym of the visitor.
        type: optional<string>
      referrer:
        docs: The referer of the visitor.
        type: optional<string>
      remote_created_at:
        docs: The time the Visitor was added to Intercom.
        type: optional<integer>
      segments:
        type: optional<VisitorSegments>
      session_count:
        docs: The number of sessions the Visitor has had.
        type: optional<integer>
      signed_up_at:
        docs: The time the Visitor signed up for your product.
        type: optional<integer>
      social_profiles:
        type: optional<VisitorSocialProfiles>
      tags:
        type: optional<VisitorTags>
      type:
        default: visitor
        docs: Value is 'visitor'
        type: optional<string>
      unsubscribed_from_emails:
        docs: Whether the Visitor is unsubscribed from emails.
        type: optional<boolean>
      updated_at:
        docs: The last time the Visitor was updated.
        type: optional<integer>
      user_id:
        docs: Automatically generated identifier for the Visitor.
        type: optional<string>
      utm_campaign:
        docs: The utm_campaign of the visitor.
        type: optional<string>
      utm_content:
        docs: The utm_content of the visitor.
        type: optional<string>
      utm_medium:
        docs: The utm_medium of the visitor.
        type: optional<string>
      utm_source:
        docs: The utm_source of the visitor.
        type: optional<string>
      utm_term:
        docs: The utm_term of the visitor.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorAvatar:
    inline: true
    properties:
      image_url:
        docs: This object represents the avatar associated with the visitor.
        type: optional<string>
        validation:
          format: uri
      type:
        default: avatar
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorCompanies:
    inline: true
    properties:
      companies: optional<list<unstableCompanies.Company>>
      type:
        docs: The type of the object
        type: optional<literal<"company.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorDeletedObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        docs: The unique identifier for the visitor which is given by Intercom.
        type: optional<string>
      type:
        docs: The type of object which was deleted
        type: optional<literal<"visitor">>
      user_id:
        docs: Automatically generated identifier for the Visitor.
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorLocationData:
    inline: true
    properties:
      city_name:
        docs: The city name of the visitor.
        type: optional<string>
      continent_code:
        docs: The continent code of the visitor.
        type: optional<string>
      country_code:
        docs: The country code of the visitor.
        type: optional<string>
      country_name:
        docs: The country name of the visitor.
        type: optional<string>
      postal_code:
        docs: The postal code of the visitor.
        type: optional<string>
      region_name:
        docs: The region name of the visitor.
        type: optional<string>
      timezone:
        docs: The timezone of the visitor.
        type: optional<string>
      type:
        default: location_data
        docs: ''
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorSegments:
    inline: true
    properties:
      segments: optional<list<string>>
      type:
        docs: The type of the object
        type: optional<literal<"segment.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorSocialProfiles:
    inline: true
    properties:
      social_profiles: optional<list<string>>
      type:
        docs: The type of the object
        type: optional<literal<"social_profile.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorTags:
    inline: true
    properties:
      tags: optional<list<VisitorTagsTagsItem>>
      type:
        docs: The type of the object
        type: optional<literal<"tag.list">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  VisitorTagsTagsItem:
    inline: true
    properties:
      id:
        docs: The id of the tag.
        type: optional<string>
      name:
        docs: The name of the tag.
        type: optional<string>
      type:
        docs: The type of the object
        type: optional<literal<"tag">>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  WhatsappMessageStatusList:
    properties:
      events: list<WhatsappMessageStatusListEventsItem>
      pages: WhatsappMessageStatusListPages
      ruleset_id:
        docs: The provided ruleset ID
        type: string
      total_count:
        docs: Total number of events
        type: integer
      type: literal<"list">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  WhatsappMessageStatusListEventsItem:
    inline: true
    properties:
      conversation_id:
        docs: ID of the conversation
        type: string
      created_at:
        docs: Creation timestamp
        type: integer
      id:
        docs: Event ID
        type: string
      status:
        docs: Current status of the message
        type: WhatsappMessageStatusListEventsItemStatus
      template_name:
        docs: Name of the WhatsApp template used
        type: optional<string>
      type:
        docs: Event type
        type: literal<"broadcast_outbound">
      updated_at:
        docs: Last update timestamp
        type: integer
      whatsapp_message_id:
        docs: WhatsApp's message identifier
        type: string
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  WhatsappMessageStatusListEventsItemStatus:
    docs: Current status of the message
    enum:
      - sent
      - delivered
      - read
      - failed
    inline: true
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  WhatsappMessageStatusListPages:
    inline: true
    properties:
      next:
        docs: Information for fetching next page (null if no more pages)
        type: optional<WhatsappMessageStatusListPagesNext>
      per_page:
        docs: Number of results per page
        type: integer
      total_pages:
        docs: Total number of pages
        type: integer
      type: literal<"pages">
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
  WhatsappMessageStatusListPagesNext:
    docs: Information for fetching next page (null if no more pages)
    inline: true
    properties:
      starting_after:
        docs: Cursor for the next page
        type: optional<string>
    source:
      openapi: ../descriptions/0/api.intercom.io.yaml
errors:
  BadRequestError:
    docs: Bad Request
    examples:
      - name: Example of an invalid away_status_reason_id
        value:
          errors:
            - code: parameter_invalid
              message: Away status reason is deleted
          type: error.list
      - name: >-
          Example of a missing away_status_reason_id when away reasons are
          mandatory
        value:
          errors:
            - code: away_status_reason_mandatory
              message: Away status reason is mandatory
          type: error.list
      - name: Bad Request
        value:
          errors:
            - code: parameter_not_found
              message: >-
                author_id must be in the main body or default locale
                translated_content object
          request_id: e522ca8a-cd15-404e-84b3-7f7536003d4a
          type: error.list
      - name: No dataset_id
        value:
          errors:
            - code: bad_request
              message: '''dataset_id'' is a required parameter'
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Invalid dataset_id
        value:
          errors:
            - code: bad_request
              message: imaginary is not a valid dataset_id
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: No attribute_ids
        value:
          errors:
            - code: bad_request
              message: '''attribute_ids'' is a required parameter'
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Empty attribute_ids
        value:
          errors:
            - code: bad_request
              message: attribute_ids must contain at least one attribute_id
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Non array attribute_ids
        value:
          errors:
            - code: bad_request
              message: '''attribute_ids'' not an array must be of type Array'
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Invalid attribute_ids
        value:
          errors:
            - code: bad_request
              message: 'attribute_ids invalid for conversation dataset: non_existent'
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Bad Request
        value:
          errors:
            - code: parameter_not_found
              message: Name is a required parameter.
          request_id: 816186b3-3187-4b47-adf8-e201bea32208
          type: error.list
      - name: Bad Request
        value:
          errors:
            - code: bad_request
              message: bad 'test' parameter
          type: error.list
      - name: Bad Request
        value:
          errors:
            - code: parameter_not_found
              message: company not specified
          request_id: 8879ee29-ade4-4b5a-a275-ab1ac531b82a
          type: error.list
      - name: Bad request
        value:
          errors:
            - code: parameter_invalid
              message: Ticket type is not a customer ticket type
          request_id: 450e0b22-ccc2-40dd-bf54-bc0faaa28f57
          type: error.list
      - name: BadRequest
        value:
          errors:
            - code: data_invalid
              message: Contact not found or could not be created
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: Same name already exists
        value:
          errors:
            - code: parameter_invalid
              message: >-
                You already have 'The One Ring' in your company data. To save
                this as new people data, use a different name.
          request_id: da2a7037-11f4-4fcc-8d19-27da3b3a4336
          type: error.list
      - name: Invalid name
        value:
          errors:
            - code: parameter_invalid
              message: >-
                Your name for this attribute must only contain alphanumeric
                characters, currency symbols, and hyphens
          request_id: 1c45cfd9-ffd1-4e3e-9f7a-2ac99abdf03d
          type: error.list
      - name: Attribute already exists
        value:
          errors:
            - code: parameter_invalid
              message: >-
                You already have 'The One Ring' in your company data. To save
                this as new company data, use a different name.
          request_id: 55999605-a170-4894-a3d0-090c4fee8d11
          type: error.list
      - name: Invalid Data Type
        value:
          errors:
            - code: parameter_invalid
              message: Data Type isn't an option
          request_id: e0a9ccc7-a540-4ef0-8ffc-28ab86658b04
          type: error.list
      - name: Too few options for list
        value:
          errors:
            - code: parameter_invalid
              message: The Data Attribute model field must be either contact or company
          request_id: 6544ccf8-435d-49e1-91ed-e49356f14255
          type: error.list
      - name: Too few options in list
        value:
          errors:
            - code: parameter_invalid
              message: Options isn't an array
          request_id: 37cff4c5-5e1a-4958-a2ba-149b09d1915c
          type: error.list
      - name: Invalid parameter
        value:
          errors:
            - code: parameter_invalid
              message: Invalid updated_since timestamp
          request_id: bc300b1a-492a-405f-924e-a5881cb72e3a
          type: error.list
      - name: No body supplied for message
        value:
          errors:
            - code: parameter_invalid
              message: Body is required
          request_id: 3f3e74cc-65af-4408-9bf5-9e71b55c8166
          type: error.list
      - name: No body supplied for email message
        value:
          errors:
            - code: parameter_invalid
              message: Body is required
          request_id: 2d6abc61-1441-4860-9ef0-777852f8b24f
          type: error.list
      - name: Invalid body supplied for sms message
        value:
          errors:
            - code: parameter_invalid
              message: Invalid SMS message body
          request_id: d7997515-65af-4860-9bf5-777852f8b24f
          type: error.list
      - name: missing ruleset_id
        value:
          message: ruleset_id is required
          request_id: req_123
          type: error
      - name: bad request - exception sending sms
        value:
          error_key: sms_failed
          message: SMS was not sent due to an unknown error
      - name: bad request - invalid number
        value:
          error_key: invalid_phone_number
          message: Invalid phone number
      - name: too_many_ids
        value:
          errors:
            - code: conversation_id_limit_exceeded
              message: A list of up to 20 conversation IDs is required
          type: error.list
      - name: Invalid parameters
        value:
          errors:
            - code: parameter_invalid
              message: invalid tag parameters
          request_id: 33a05108-3bf7-411f-a270-72db40b5a31c
          type: error.list
      - name: Tag has dependent objects
        value:
          errors:
            - code: tag_has_dependent_objects
              message: 'Unable to delete Tag with dependent objects. Segments: Seg 1.'
          request_id: 28960d1e-a056-46c0-bf18-a0d798eb889f
          type: error.list
      - name: User reply
        value:
          errors:
            - code: parameter_mismatch
              message: User replies are not allowed on Backoffice tickets
          request_id: 603ce1da-f2bf-4641-a1ee-d1f13ebf9172
          type: error.list
      - name: Bad Request
        value:
          errors:
            - code: parameter_invalid
              message: Missing required ticket attributes
          request_id: c7bf358f-135e-48d7-8286-a4988a8a1456
          type: error.list
      - name: >-
          Ticket state id is not valid or is not associated with the ticket
          type.
        value:
          errors:
            - code: ticket_state_id_invalid
              message: >-
                Ticket state id is not valid or is not associated with the
                ticket type
          request_id: 28b71de1-b451-433a-a08c-845f2b1736b6
          type: error.list
    status-code: 400
    type: unknown
  ForbiddenError:
    docs: API plan restricted
    examples:
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 591a0c2f-78b3-41bb-bfa7-f1fae15107b9
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: dcf1b373-3e66-4026-a987-98c16f00a908
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 8b3deed3-fd8b-43d6-b6a8-428c9e17aabb
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 34072e07-6b70-4f59-96bf-3106a3563a24
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 7a80b950-b392-499f-85db-ea7c6c424d37
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 48ad16d0-525c-40bf-b733-89239feb70e3
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: a57737d0-63a7-42bd-aa65-8380ef828124
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 99f72599-ac98-4b1e-af96-808654b6383e
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 6fe4106b-967a-46ba-b1c9-9996aff6e8c3
          type: error.list
      - name: OAuth token lacks read_conversations scope
        value:
          errors:
            - code: forbidden
              message: >-
                You do not have the required scope (read_conversations) to
                access this resource
          request_id: f097e446-9ae6-44a8-8e13-2bf3008b87ef
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 72b6821e-54ff-4a25-adf9-abdfef5fe72b
          type: error.list
      - name: API plan restricted
        value:
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
          request_id: 591a0c2f-78b3-41bb-bfa7-f1fae15107b0
          type: error.list
    status-code: 403
    type: Error
  InternalServerError:
    docs: Internal server error
    examples:
      - value:
          errors:
            - code: unauthorized
          type: error.list
    status-code: 500
    type: Error
  NotFoundError:
    docs: Admin not found
    examples:
      - name: Admin not found
        value:
          errors:
            - code: admin_not_found
              message: Admin for admin_id not found
          request_id: efcd0531-798b-4c22-bccd-68877ed7faa4
          type: error.list
      - name: Admin not found
        value:
          errors:
            - code: admin_not_found
              message: Admin not found
          request_id: c59f7ca5-1639-4284-a66d-50e34ed98ab3
          type: error.list
      - name: Article not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 79abd27a-1bfb-42ec-a404-5728c76ba773
          type: error.list
      - name: Article Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: afe37506-cc48-4727-8068-ae7ff0e7b0e3
          type: error.list
      - name: Collection not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: a074a09e-97d1-44e2-b164-b703559c9f23
          type: error.list
      - name: Collection Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 198e3add-d017-4e18-b478-fbe2cb8c538b
          type: error.list
      - name: collection Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: f0d0ea9b-ffaf-48f5-95d0-e99531c379e2
          type: error.list
      - name: Collection not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: bbd5de60-49c4-4850-afff-1226cdaa0beb
          type: error.list
      - name: Internal article not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 79abd27a-1bfb-42ec-a404-5728c76ba773
          type: error.list
      - name: Internal article not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: f9adccb2-9fca-4b87-bbb7-65f2af5e1d78
          type: error.list
      - name: Internal article not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: afe37506-cc48-4727-8068-ae7ff0e7b0e3
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 9bc4fc62-7cdf-4f72-a56e-02af4836d499
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 57d57564-b5e2-4064-abfe-4653e5ac24c0
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: daa64b43-3e3c-4fc4-aef9-91eb40c7885c
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 4f41d1d6-7a42-45e3-a24e-544deb62da47
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 5dde0b79-8c81-4d9e-a4d4-736a44cf2f00
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: de5d939e-77fb-46d7-a3b9-f34199d9f25a
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 32c856ba-901b-49c4-8e8d-d43fc3ee6ea5
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 981799ea-f19b-432d-828c-491a3b29ad29
          type: error.list
      - name: Company Not Found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: dcfc3465-8a51-4d78-b24c-2f215d48f339
          type: error.list
      - name: Contact Not Found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: b5a1f332-1bf1-44bd-a068-2634244b6051
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 57055cde-3d0d-4c67-b5c9-b20b80340bf0
          type: error.list
      - name: Admin not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 168f1bc3-d198-4797-8422-9f93fe8af5ad
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 6f372239-0259-428f-9943-91b8f7a92162
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 61c119c7-b2f0-4158-8457-fd53e83f936a
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: c9b793ad-ff39-436c-80c9-db6f24d0d444
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 0c2871af-abed-4bce-a5c5-77efbe721711
          type: error.list
      - name: Resource not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 2774db46-34d9-4925-a24d-8203d4a39f65
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 82b37940-b43f-46ee-a492-11543a317c97
          type: error.list
      - name: Resource not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: c18422ca-5454-42af-9e1d-dd92066e6e9d
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 302049fb-b8c1-4dc8-a327-a8f6e1923484
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: f22a7847-ee33-449f-80c0-707efd295a53
          type: error.list
      - name: Tag not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 8a3e4f88-ae65-433a-b4eb-46780ffc5402
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: b3d41080-5b35-42b8-8584-31e4660d355f
          type: error.list
      - name: Tag not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 02871f7a-860e-433a-8545-6a73fbbe5e22
          type: error.list
      - name: Conversation not found
        value:
          errors:
            - code: not_found
              message: Conversation not found
          request_id: c6e8c74f-a354-4dfd-a5be-6061d2d26341
          type: error.list
      - name: Conversation not found
        value:
          errors:
            - code: not_found
              message: Conversation not found
          request_id: 84db22c5-0fef-465a-a909-2643d8a22c69
          type: error.list
      - name: Tag not found
        value:
          errors:
            - code: tag_not_found
              message: Tag not found
          request_id: 1fe3e9ec-6a5b-4abc-b51c-a515f77d9577
          type: error.list
      - name: Contact Not Found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: d7eb553e-74ae-4341-820b-5d38a94d4a99
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 8c288c4f-b699-4209-9de4-064398f02785
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: de1be01d-a0d3-48a6-9ea6-9789931a6887
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 06234918-c245-4caa-a2cc-90247983c6ff
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: e056b3c3-fae3-4a3c-9bcf-836b84efa331
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 86fd8b2e-7048-4fbd-9fb0-d73085d7210b
          type: error.list
      - name: Conversation not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 89835b60-6756-4d2a-b148-26ca0cb49f9f
          type: error.list
      - name: Contact not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: ab1b9371-3185-417f-a53a-dcae35892980
          type: error.list
      - name: Not found
        value:
          errors:
            - code: conversation_part_or_message_not_found
              message: Conversation part or message not found
          request_id: 5b7bb755-4031-4bfe-8897-54d0f1872bbc
          type: error.list
      - name: ObjectNotFound
        value:
          errors:
            - code: not_found
              message: Object not found
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: CustomObjectNotFound
        value:
          errors:
            - code: not_found
              message: Custom object instance not found
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: IntegrationNotFound
        value:
          errors:
            - code: data_invalid
              message: Integration not found
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: TypeNotFound
        value:
          errors:
            - code: not_found
              message: Custom object type `undefined` not found
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: Attribute Not Found
        value:
          errors:
            - code: field_not_found
              message: We couldn't find that data attribute to update
          request_id: eee16d31-0b0a-4b5f-b95a-25d37528c80f
          type: error.list
      - name: Job not found
        value:
          errors:
            - code: job_not_found
              message: Job Not Found
          request_id: 123e4567-e89b-12d3-a456-426614174000
          type: error.list
      - name: Macro not found
        value:
          errors:
            - code: not_found
              message: Macro not found
          request_id: bc300b1a-492a-405f-924e-a5881cb72e3a
          type: error.list
      - name: News Item Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: da84e250-8626-47e8-815c-62b33f0f2c36
          type: error.list
      - name: News Item Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 2014d867-b634-495a-9b4f-ce56c4d657a9
          type: error.list
      - name: News Item Not Found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 23728e22-7b9f-44a9-9b8d-5028811b9cd0
          type: error.list
      - name: Note not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: bc300b1a-492a-405f-924e-a5881cb72e3a
          type: error.list
      - name: Segment not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: bd697cc6-7757-488c-a89f-16e6feaf7585
          type: error.list
      - name: Not Found
        value:
          errors:
            - code: not_found
              message: Not Found
          request_id: 9bc4fc62-7cdf-4f72-a56e-02af4836d499
          type: error.list
      - name: Not Found
        value:
          errors:
            - code: not_found
              message: Recording Not Found
          request_id: 9bc4fc62-7cdf-4f72-a56e-02af4836d499
          type: error.list
      - name: Company not found
        value:
          errors:
            - code: company_not_found
              message: Company Not Found
          request_id: 23c998cc-32b8-435d-9653-932c15809460
          type: error.list
      - name: User  not found
        value:
          errors:
            - code: not_found
              message: User Not Found
          request_id: 7358f78d-f122-45dd-a2e1-c2261300c38a
          type: error.list
      - name: Tag not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: e20c89d2-29c6-4abb-aa3d-c860e1cec1ca
          type: error.list
      - name: Resource not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 49536975-bbc5-4a2f-ab8b-7928275cb4d3
          type: error.list
      - name: Team not found
        value:
          errors:
            - code: team_not_found
              message: Team not found
          request_id: 3ff156ba-a66e-40d4-93ff-cb6e6afc3c9d
          type: error.list
      - name: Not found
        value:
          errors:
            - code: not_found
              message: Resource Not Found
          request_id: 24561472-06a4-41b2-aca2-97b3ccd9ca19
          type: error.list
      - name: Ticket not found
        value:
          errors:
            - code: ticket_not_found
              message: Ticket not found
          request_id: b44cff1d-c6f8-4d60-ab6f-33522cd739d8
          type: error.list
      - name: Ticket not found
        value:
          errors:
            - code: ticket_not_found
              message: Ticket not found
          request_id: 734019dc-1d61-4fad-a86e-e3fb06244c4d
          type: error.list
      - name: Tag not found
        value:
          errors:
            - code: tag_not_found
              message: Tag not found
          request_id: a3658b9a-3562-48a7-8afe-362284632d67
          type: error.list
      - name: Admin not found
        value:
          errors:
            - code: assignee_not_found
              message: Assignee not found
          request_id: f9757add-b48a-4519-a6e0-04b2ef9c8c6c
          type: error.list
      - name: Assignee not found
        value:
          errors:
            - code: assignee_not_found
              message: Assignee not found
          request_id: 39cf6495-768c-450c-a2c4-c9c3c4ea2e01
          type: error.list
      - name: Ticket not found
        value:
          errors:
            - code: ticket_not_found
              message: Ticket not found
          request_id: 34a070f1-122e-42dc-a94e-9b86768df26c
          type: error.list
      - name: Visitor not found
        value:
          errors:
            - code: not_found
              message: Visitor Not Found
          request_id: 3c1b017d-39fb-4d13-8cc9-540ad0d37106
          type: error.list
      - name: visitor Not Found
        value:
          errors:
            - code: not_found
              message: Visitor Not Found
          request_id: 6a6d5522-54e2-437d-8fd0-1109686af965
          type: error.list
      - name: Brand not found
        value:
          errors:
            - code: not_found
              message: Brand not found
          request_id: req_12345
          type: error.list
      - name: Email setting not found
        value:
          errors:
            - code: not_found
              message: Email setting not found
          request_id: req_12345
          type: error.list
    status-code: 404
    type: unknown
  TooManyRequestsError:
    docs: Too many jobs in progress
    examples:
      - name: Unauthorized
        value:
          errors:
            - code: rate_limit_exceeded
              message: Exceeded rate limit of 5 pending reporting dataset export jobs
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
    status-code: 429
    type: Error
  UnauthorizedError:
    docs: Unauthorized
    examples:
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: e76b2df0-2413-4215-8a5a-b5f6ebd4e642
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 57cc6148-2c0a-471b-bd9e-859538110958
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 5ef5682e-f66e-40a4-b828-8592175f83b8
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ff783bc1-754f-4a9f-887b-22f94fec18f0
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 9e554e0f-ed0a-4fc6-b141-105d70c9d485
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 31262ee6-aa3b-4748-a260-a1084754ebae
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 5556d3dd-d4e2-4424-9757-2ad0accb52e5
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: cb4a6795-2cdb-44f9-adb7-0624702f7e8a
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 093e1dd9-996a-4154-a64c-80803a5c2084
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: bd0c53dd-d3fd-4095-be25-94537a8ba364
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 205ffc13-1b25-43b2-a176-cb817af5f899
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 504cde98-f786-4f64-b373-e26a6a41fd11
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 8217b189-b908-4562-962d-2a19a7b77f25
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2380cdd5-c4a0-451a-b07d-a6f4b720add3
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2e760b85-9020-471b-89dc-f579ec8a0104
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 85e91429-72df-4e69-8a12-b55793dff59f
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2eab07fb-5092-49a4-ba74-44094f31f264
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c6e86ce8-9402-4196-89c5-f1b2912b4bac
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c70746a8-a5b2-4772-afba-1a4b487ea75d
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: b68959ea-6328-4f70-83cb-e7913dba1542
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 12c2d3a0-77ef-462e-a5ed-e67ddff50b6e
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 25d96ec2-641f-4354-b24e-83a85d33bd30
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: a29395a5-181c-4f3b-b069-5b2f32604c58
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: b286edcc-453d-43af-bf2f-40f303708c61
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: d0d16fb5-93e6-45ca-b07d-f98fb92fd733
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c7c301f6-9206-418b-9792-98821970e48b
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 76edbbb7-e463-4f6a-817a-b7905d467535
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: d1ea223d-bb62-42e3-8bcf-30fdcf7dbd99
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2fa563ba-f9c9-4281-a76b-10bfd777dfd7
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 8a9f415f-e9df-41e9-ba1f-739914f66551
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: caf73ce4-bda6-4f2b-bbfb-0d984d430335
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 4748eb32-3261-4798-ace0-a5825edf4eb5
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 7b13fd9c-31be-40de-94e1-d71f260a3458
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: f7586690-c217-47db-9042-cb9550b81260
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 91f04dce-5759-4d80-981e-f598ec989d1a
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 537ccc45-2cae-4e72-ac2f-849f1422a771
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ca269b05-8c42-4615-a28d-7df0eb1687c5
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 565a4f38-5fa9-451d-bcf0-32076f79517f
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 1f187e85-cd9a-4be4-964e-cdbb8c66334a
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 9bc1e0cc-5cc4-412d-8037-57e073375ab0
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 0273c219-51b7-4938-95d2-19996b2e2734
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 7323b97b-9ba4-4c54-946c-38cecea65b3c
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: f615465d-fd5f-4d68-8498-389130b897e4
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c7de741d-dc8f-49b1-8cbe-791668ade76c
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ca3c5e6e-c743-428b-aa8a-ac371a50cc39
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 9b1c9966-caeb-485a-8419-d707fd472c63
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 491beaa4-a452-4940-85e0-498c0ca5528d
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 45b30bd1-75d2-40cc-bb39-74ac133a2836
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 89ce96d9-aae9-4eec-ace2-d68cc4f74879
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: a947b2f0-23d3-419d-9ec4-cdd191cea676
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ff328c7c-6140-48eb-84dd-bb8960b66cd0
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: f0dc95f1-9e46-4e8d-8150-89365c2c5195
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: e097e446-9ae6-44a8-8e13-2bf3008b87ef
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ff2353d3-d3d6-4f20-8268-847869d01e73
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 1fb28be7-cda6-4029-b4da-447ef61cb61a
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 617bb25d-4dea-4a68-ae74-2fb8f4e87b39
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: df73b7b4-2352-44fd-8d14-4ea8536ad138
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: b14d75ab-7d26-4191-b33f-77ca0a4d4ede
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 68e42c33-8220-48ea-906f-75584c3ec440
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 1350c241-0f22-48ca-bab9-169080340870
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: de63ddb2-c525-4ebf-ad38-82ed8b44c896
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 310f55b0-2660-43e8-bed4-7e82b2f40920
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 50f1e8d1-cf1a-450c-a7b5-87a264076241
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 623bbbb8-f6fb-45f3-a2e2-4106ff3a4349
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 9dc7c1a0-b818-472c-adf6-3e327f22f541
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 89ef64b2-d1f9-40c3-89e9-d39175d3d647
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 4814668f-5d31-4bf7-8f66-b426aac054db
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 6d231766-b44b-4e78-bc9e-9c268ff19671
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: fa71b91c-4a25-4fe6-88a9-884f6950860e
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c60ce63d-1c74-4fe2-8e21-31d1f817a0c2
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: e6f50446-be4a-40ac-8c8d-6fb91e1040fd
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 212c8206-e7a6-44c8-8f27-5f0ad7f1d243
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 7a7d8425-2c1b-46ab-8133-c043fc1e5711
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2c8a20ee-ed09-42c0-a31d-a1b4f5d2742d
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: d7997515-cd92-4fe4-966c-cb1f4bdda1d4
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 5142ad8e-883e-4b71-9adb-6494851e9b77
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 33ff62c6-ceb7-4bde-93d6-301bed6f24b2
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 5838c54e-dd15-460b-82dd-794c4d0e12c5
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: e5357876-89be-4a04-80c3-16735b7f53ff
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 022ff8b0-d16f-437c-8217-754c13e16dee
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: caa26d8b-6512-445d-9418-9fc5849ca304
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 6d9a1bf5-aa08-4c93-a61a-5a21130b6553
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 81384687-5818-4df9-b421-fba77edd6c17
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: b1939528-98f0-4a63-a442-2cc9203fc8c7
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: be0d5309-d722-4d2a-aae9-77f4bc0a2cd0
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 06d15b1f-19b0-42cc-aff9-a9d9db39402b
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: e1ed4f34-9477-492a-8ddb-22f10af39734
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2859da57-c83f-405c-8166-240a312442a3
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: f230e3a7-00a9-456b-bf1c-2ad4b7dc49f6
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c1c0477c-5b80-4874-be65-01ec8a9ffe14
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 90a369be-14bb-48d1-8ed6-6287976f6a64
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: a77dadbc-1f1e-4875-bac3-f0d09bbc214a
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: fc4b741b-b9f1-4ef9-92c7-eb71e9811df3
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 5e0bd231-7307-42e6-a6ee-babf05bd163b
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 6c9836ed-8485-4f1d-929d-b9d7e153daed
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: cd303186-b33e-4409-8bfc-5814b176d6e1
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: a63507c2-3b3b-4a1a-aafa-f08b87eb2c12
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 36b79d0c-b78f-4e1d-bd6d-bfc3dcc71f53
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c9a2c3da-7536-4eba-bde7-c38c2d9e2942
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: ed4305b3-4364-4fab-9f8d-e07e9a8190ab
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2bed74fe-1b04-4c07-8813-02c700e8dcad
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 2e87c98e-4ffc-407e-b7bc-065d4d456ea7
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: c7bf358f-135e-48d7-8286-a4988a8a1d9b
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: d719ad4f-5ae2-492f-88d6-98ba0a9ab6cc
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 17db783e-1e43-41c9-b4db-0c05da78a909
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 50348131-55cd-4ca1-a65f-de093b232adb
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 1d7f49b3-10bc-4bf8-a28a-1ac95de3a6ff
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: 3f474ec4-4e61-42ee-9acc-eac64982e393
          type: error.list
      - name: Unauthorized
        value:
          errors:
            - code: unauthorized
              message: Access Token Invalid
          request_id: b3e71306-0600-41e4-9f44-83b52906d2b7
          type: error.list
      - value:
          errors:
            - code: unauthorized
          type: error.list
    status-code: 401
    type: Error
  UnprocessableEntityError:
    docs: Last customer
    examples:
      - name: Last customer
        value:
          errors:
            - code: parameter_invalid
              message: Removing the last customer is not allowed
          request_id: 8275e92f-66b7-40f9-82a8-9647ca8d7eb4
          type: error.list
      - name: ValidationError
        value:
          errors:
            - code: data_invalid
              message: Invalid or duplicated record reference
          request_id: 12a938a3-314e-4939-b773-5cd45738bd21
          type: error.list
      - name: Has Dependant Object
        value:
          errors:
            - code: data_invalid
              message: >-
                The Data Attribute you are trying to archive has a dependant
                object
          request_id: f04b6b14-1c5b-46e1-9c95-4a914557062c
          type: error.list
      - name: No subject supplied for email message
        value:
          errors:
            - code: parameter_not_found
              message: No subject supplied for email message
          request_id: 97db463e-7070-4ac9-9846-9a5d31933772
          type: error.list
      - name: unprocessable entity
        value:
          error_key: some_error
    status-code: 422
    type: unknown
