paths:
  /me:
    get:
      x-fern-sdk-group-name:
        - admins
      x-fern-sdk-method-name: identify
      x-fern-request-name: IdentifyAdminRequest
  /admins/activity_logs:
    get:
      x-fern-sdk-group-name:
        - admins
      x-fern-sdk-method-name: listAllActivityLogs
      x-fern-request-name: ListAllActivityLogsRequest
  /admins:
    get:
      x-fern-sdk-group-name:
        - admins
      x-fern-sdk-method-name: list
      x-fern-request-name: ListAdminsRequest
  /admins/{admin_id}:
    get:
      x-fern-sdk-group-name:
        - admins
      x-fern-sdk-method-name: find
      x-fern-request-name: FindAdminRequest
  /admins/{admin_id}/away:
    put:
      x-fern-sdk-group-name:
        - admins
      x-fern-sdk-method-name: away
      x-fern-request-name: ConfigureAwayAdminRequest
  /articles:
    get:
      x-fern-pagination:
        offset: $request.page
        results: $response.data
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: list
      x-fern-request-name: ListArticlesRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
    post:
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateArticleRequest
  /articles/{article_id}:
    get:
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: find
      x-fern-request-name: FindArticleRequest
    put:
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateArticleRequest
    delete:
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteArticleRequest
  /articles/search:
    get:
      x-fern-sdk-group-name:
        - articles
      x-fern-sdk-method-name: search
      x-fern-request-name: SearchArticlesRequest
      parameters:
      - name: Intercom-Version
        in: header
        schema:
          "$ref": "#/components/schemas/intercom_version"
      - name: phrase
        in: query
        required: false
        description: The phrase within your articles to search for.
        example: Getting started
        schema:
          type: string
      - name: state
        in: query
        required: false
        description: The state of the Articles returned. One of `published`, `draft`
          or `all`.
        example: published
        schema:
          type: string
      - name: help_center_id
        in: query
        required: false
        description: The ID of the Help Center to search in.
        example: 123
        schema:
          type: integer
      - name: highlight
        in: query
        required: false
        description: Return a highlighted version of the matching content within your
          articles. Refer to the response schema for more details.
        example: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
  /help_center/collections:
    get:
      x-fern-pagination:
        offset: $request.page
        results: $response.data
      x-fern-sdk-group-name:
        - helpCenters
        - collections
      x-fern-sdk-method-name: list
      x-fern-request-name: ListCollectionsRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
    post:
      x-fern-sdk-group-name:
        - helpCenters
        - collections
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateCollectionRequest
  /help_center/collections/{collection_id}:
    get:
      x-fern-sdk-group-name:
        - helpCenters
        - collections
      x-fern-sdk-method-name: find
      x-fern-request-name: FindCollectionRequest
    put:
      x-fern-sdk-group-name:
        - helpCenters
        - collections
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateCollectionRequest
    delete:
      x-fern-sdk-group-name:
        - helpCenters
        - collections
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteCollectionRequest
  /help_center/help_centers:
    get:
      x-fern-pagination:
        offset: $request.page
        results: $response.data
      x-fern-sdk-group-name:
        - helpCenters
      x-fern-sdk-method-name: list
      x-fern-request-name: ListHelpCentersRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
  /help_center/help_centers/{help_center_id}:
    get:
      x-fern-sdk-group-name:
        - helpCenters
      x-fern-sdk-method-name: find
      x-fern-request-name: FindHelpCenterRequest
  /companies:
    get:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: retrieve
      x-fern-request-name: RetrieveCompanyRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                "$ref": null
                oneOf:
                  - $ref: "#/components/schemas/company"
                  - $ref: "#/components/schemas/company_list"
    post:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: createOrUpdate
      x-fern-request-name: CreateOrUpdateCompanyRequest
  /companies/{company_id}:
    get:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: find
      x-fern-request-name: FindCompanyRequest
    put:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateCompanyRequest
    delete:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteCompanyRequest
  /companies/{company_id}/contacts:
    get:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: listAttachedContacts
      x-fern-request-name: ListAttachedContactsRequest
  /companies/{company_id}/segments:
    get:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: listAttachedSegments
      x-fern-request-name: ListSegmentsAttachedToCompanyRequest
  /companies/list:
    post:
      x-fern-pagination:
        offset: $request.page
        results: $response.data
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: list
      x-fern-request-name: ListCompaniesRequest
  /companies/scroll:
    get:
      x-fern-pagination:
        cursor: $request.scroll_param
        next_cursor: $response.scroll_param
        results: $response.data
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: scroll
      x-fern-request-name: ScrollCompaniesRequest
  /contacts:
    get:
      x-fern-pagination:
        cursor: $request.starting_after
        next_cursor: $response.pages.next.starting_after
        results: $response.data
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: list
      x-fern-request-name: ListContactsRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
      - name: starting_after
        in: query
        required: false
        description: String used to get the next page of conversations.
        schema:
          type: string
    post:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateContactRequest
  /contacts/{contact_id}:
    get:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: find
      x-fern-request-name: FindContactRequest
    put:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateContactRequest
    delete:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteContactRequest
  /contacts/{contact_id}/companies:
    get:
      x-fern-pagination:
        offset: $request.page
        results: $response.companies
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: listAttachedCompanies
      x-fern-request-name: ListAttachedCompaniesRequest
      parameters:
      - name: contact_id
        in: path
        description: The unique identifier for the contact which is given by Intercom
        example: 63a07ddf05a32042dffac965
        required: true
        schema:
          type: string
      - name: Intercom-Version
        in: header
        schema:
          "$ref": "#/components/schemas/intercom_version"
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
    post:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: attachContact
      x-fern-request-name: AttachContactToCompanyRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  x-fern-property-name: company_id
  /contacts/{contact_id}/companies/{company_id}:
    delete:
      x-fern-sdk-group-name:
        - companies
      x-fern-sdk-method-name: detachContact
      x-fern-request-name: DetachContactFromCompanyRequest
  /contacts/{contact_id}/notes:
    get:
      x-fern-pagination:
        offset: $request.page
        results: $response.data
      x-fern-sdk-group-name:
        - notes
      x-fern-sdk-method-name: list
      x-fern-request-name: ListContactNotesRequest
      parameters:
      - name: contact_id
        in: path
        required: true
        description: The unique identifier of a contact.
        schema:
          type: string
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
      - name: page
        in: query
        required: false
        description: The page of results to fetch. Defaults to first page
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
    post:
      x-fern-sdk-group-name:
        - notes
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateContactNoteRequest
      parameters:
      - name: Intercom-Version
        in: header
        schema:
          "$ref": "#/components/schemas/intercom_version"
      - name: contact_id
        in: path
        required: true
        description: The unique identifier of a given contact.
        example: '123'
        schema:
          type: string
  /contacts/{contact_id}/segments:
    get:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: listAttachedSegments
      x-fern-request-name: ListSegmentsAttachedToContactRequest
  /contacts/{contact_id}/subscriptions:
    get:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: listAttachedSubscriptions
      x-fern-request-name: ListAttachedSubscriptionsRequest
    post:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: attachSubscription
      x-fern-request-name: AttachSubscriptionToContactRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  x-fern-property-name: subscription_id
  /contacts/{contact_id}/subscriptions/{subscription_id}:
    delete:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: detachSubscription
      x-fern-request-name: DetachSubscriptionFromContactRequest
  /contacts/{contact_id}/tags:
    get:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: listAttachedTags
      x-fern-request-name: ListTagsAttachedToContactRequest
    post:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: tagContact
      x-fern-request-name: TagContactRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  x-fern-property-name: tag_id
  /contacts/{contact_id}/tags/{tag_id}:
    delete:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: untagContact
      x-fern-request-name: UntagContactRequest
  /contacts/{contact_id}/archive:
    post:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: archive
      x-fern-request-name: ArchiveContactRequest
  /contacts/{contact_id}/unarchive:
    post:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: unarchive
      x-fern-request-name: UnarchiveContactRequest
  /contacts/merge:
    post:
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: mergeLeadInUser
  /contacts/search:
    post:
      x-fern-pagination:
        cursor: $request.pagination.starting_after
        next_cursor: $response.pages.next.starting_after
        results: $response.data
      x-fern-sdk-group-name:
        - contacts
      x-fern-sdk-method-name: search
      x-fern-request-name: SearchContactsRequest
  /conversations/{conversation_id}/tags:
    post:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: tagConversation
      x-fern-request-name: TagConversationRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  x-fern-property-name: tag_id
  /conversations/{conversation_id}/tags/{tag_id}:
    delete:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: untagConversation
      x-fern-request-name: UntagConversationRequest
  /conversations:
    get:
      x-fern-pagination:
        cursor: $request.starting_after
        next_cursor: $response.pages.next.starting_after
        results: $response.conversations
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: list
      x-fern-request-name: ListConversationsRequest
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateConversationRequest
  /conversations/{conversation_id}:
    get:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: find
      x-fern-request-name: FindConversationRequest
    put:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateConversationRequest
  /conversations/{conversation_id}/reply:
    post:
      requestBody:
        content:
          application/json:
            examples:
              user_last_conversation_reply:
                summary: null
              user_reply:
                summary: null
              admin_note_reply:
                summary: null
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: reply
      x-fern-request-name: ReplyToConversationRequest
  /conversations/{conversation_id}/parts:
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: manage
      x-fern-request-name: ManageConversationPartsRequest
  /conversations/{conversation_id}/run_assignment_rules:
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: runAssignmentRules
      x-fern-request-name: AutoAssignConversationRequest
  /conversations/{conversation_id}/customers:
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: attachContactAsAdmin
      x-fern-request-name: AttachContactToConversationRequest
  /conversations/{conversation_id}/customers/{contact_id}:
    delete:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: detachContactAsAdmin
      x-fern-request-name: DetachContactFromConversationRequest
  /conversations/{conversation_id}/convert:
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: convertToTicket
      x-fern-request-name: ConvertConversationToTicketRequest
  /conversations/search:
    post:
      x-fern-pagination:
        cursor: $request.pagination.starting_after
        next_cursor: $response.pages.next.starting_after
        results: $response.conversations
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: search
      x-fern-request-name: SearchConversationsRequest
  /conversations/redact:
    post:
      x-fern-sdk-group-name:
        - conversations
      x-fern-sdk-method-name: redactConversationPart
      x-fern-request-name: RedactConversationPartRequest
  /custom_channel_events/notify_attribute_collected:
    post:
      x-fern-sdk-group-name:
        - customChannelEvents
      x-fern-sdk-method-name: notifyAttributeCollected
      x-fern-request-name: NotifyAttributeCollectedRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
  /custom_channel_events/notify_new_conversation:
    post:
      x-fern-sdk-group-name:
        - customChannelEvents
      x-fern-sdk-method-name: notifyNewConversation
      x-fern-request-name: NotifyNewConversationRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
  /custom_channel_events/notify_new_message:
    post:
      x-fern-sdk-group-name:
        - customChannelEvents
      x-fern-sdk-method-name: notifyNewMessage
      x-fern-request-name: NotifyNewMessageRequest
      parameters:
      - name: Intercom-Version
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/intercom_version'
  /data_attributes:
    get:
      x-fern-sdk-group-name:
        - dataAttributes
      x-fern-sdk-method-name: list
      x-fern-request-name: ListDataAttributesRequest
    post:
      x-fern-sdk-group-name:
        - dataAttributes
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateDataAttributeRequest
  /data_attributes/{data_attribute_id}:
    put:
      x-fern-sdk-group-name:
        - dataAttributes
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateDataAttributeRequest
  /events:
    get:
      x-fern-sdk-group-name:
        - events
      x-fern-sdk-method-name: list
      x-fern-request-name: ListEventsRequest

      parameters:
      - name: Intercom-Version
        in: header
        schema:
          "$ref": "#/components/schemas/intercom_version"
      - name: user_id
        in: query
        required: false
        description: user_id query parameter
        schema:
          type: string
      - name: intercom_user_id
        in: query
        required: false
        description: intercom_user_id query parameter
        schema:
          type: string
      - name: email
        in: query
        required: false
        description: email query parameter
        schema:
          type: string
      - name: type
        in: query
        required: true
        description: The value must be user
        schema:
          type: string
      - name: summary
        in: query
        required: false
        description: summary flag
        schema:
          type: boolean
      - name: per_page
        in: query
        required: false
        description: How many results to display per page. Defaults to 15
        example: 15
        schema:
          type: integer
    post:
      x-fern-sdk-group-name:
        - events
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateEventRequest
  /events/summaries:
    post:
      x-fern-sdk-group-name:
        - events
      x-fern-sdk-method-name: summaries
      x-fern-request-name: ListEventSummariesRequest
  /export/content/data:
    post:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateDataExportRequest
  /export/content/data/{job_identifier}:
    get:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: find
      x-fern-request-name: FindDataExportRequest
  /export/cancel/{job_identifier}:
    post:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: cancel
      x-fern-request-name: CancelDataExportRequest
  /export/reporting_data/{job_identifier}:
    get:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: exportReportingData
      x-fern-request-name: ExportReportingDataRequest
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            "$ref": "#/components/schemas/intercom_version"
        - name: app_id
          in: query
          description: The Intercom defined code of the workspace the company is associated
            to.
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          required: true
          schema:
            type: string
        - name: job_identifier
          description: Unique identifier of the job.
          in: path
          required: true
          schema:
            type: string
  /download/content/data/{job_identifier}:
    get:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: download
      x-fern-request-name: DownloadDataExportRequest
  /download/reporting_data/{job_identifier}:
    get:
      x-fern-sdk-group-name:
        - dataExport
      x-fern-sdk-method-name: downloadReportingDataExport
      x-fern-request-name: DownloadReportingDataExportRequest
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            "$ref": "#/components/schemas/intercom_version"
        - name: Accept
          in: header
          required: true
          schema:
            type: string
            example: application/octet-stream
            enum:
              - application/octet-stream
          description: "Required header for downloading the export file"
        - name: app_id
          in: query
          required: true
          schema:
            type: string
        - name: job_identifier
          in: path
          required: true
          schema:
            type: string
  /messages:
    post:
      requestBody:
        content:
          application/json:
            examples:
              user_message_created:
                summary: null
              lead_message_created:
                summary: null
              admin_message_created:
                summary: null
      x-fern-sdk-group-name:
        - messages
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateMessageRequest
  /news/news_items:
    get:
      x-fern-sdk-group-name:
        - news
        - items
      x-fern-sdk-method-name: list
      x-fern-request-name: ListNewsItemsRequest
    post:
      x-fern-sdk-group-name:
        - news
        - items
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateNewsItemRequest
  /news/news_items/{news_item_id}:
    get:
      x-fern-sdk-group-name:
        - news
        - items
      x-fern-sdk-method-name: find
      x-fern-request-name: FindNewsItemRequest
    put:
      x-fern-sdk-group-name:
        - news
        - items
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateNewsItemRequest
    delete:
      x-fern-sdk-group-name:
        - news
        - items
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteNewsItemRequest
  /news/newsfeeds:
    get:
      x-fern-sdk-group-name:
        - news
        - feeds
      x-fern-sdk-method-name: list
      x-fern-request-name: ListNewsFeedsRequest
  /news/newsfeeds/{newsfeed_id}:
    get:
      x-fern-sdk-group-name:
        - news
        - feeds
      x-fern-sdk-method-name: find
      x-fern-request-name: FindNewsFeedRequest
  /news/newsfeeds/{newsfeed_id}/items:
    get:
      x-fern-sdk-group-name:
        - news
        - feeds
      x-fern-sdk-method-name: listItems
      x-fern-request-name: ListNewsFeedItemsRequest
  /notes/{note_id}:
    get:
      x-fern-sdk-group-name:
        - notes
      x-fern-sdk-method-name: find
      x-fern-request-name: FindNoteRequest
  /segments:
    get:
      x-fern-sdk-group-name:
        - segments
      x-fern-sdk-method-name: list
      x-fern-request-name: ListSegmentsRequest
  /segments/{segment_id}:
    get:
      x-fern-sdk-group-name:
        - segments
      x-fern-sdk-method-name: find
      x-fern-request-name: FindSegmentRequest
  /subscription_types:
    get:
      x-fern-sdk-group-name:
        - subscriptionTypes
      x-fern-sdk-method-name: list
      x-fern-request-name: ListSubscriptionTypesRequest
  /phone_call_redirects:
    post:
      x-fern-sdk-group-name:
        - phoneCallRedirects
      x-fern-sdk-method-name: create
      x-fern-request-name: CreatePhoneCallRedirectRequest
  /tags:
    get:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: list
      x-fern-request-name: ListTagsRequest
    post:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateTagRequest
  /tags/{tag_id}:
    get:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: find
      x-fern-request-name: FindTagRequest
    delete:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: delete
      x-fern-request-name: DeleteTagRequest
  /teams:
    get:
      x-fern-sdk-group-name:
        - teams
      x-fern-sdk-method-name: list
      x-fern-request-name: ListTeamsRequest
  /teams/{team_id}:
    get:
      x-fern-sdk-group-name:
        - teams
      x-fern-sdk-method-name: find
      x-fern-request-name: FindTeamRequest
  /ticket_types:
    get:
      x-fern-sdk-group-name:
        - ticketTypes
      x-fern-sdk-method-name: list
      x-fern-request-name: ListTicketTypesRequest
    post:
      x-fern-sdk-group-name:
        - ticketTypes
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateTicketTypeRequest
  /ticket_types/{ticket_type_id}:
    get:
      x-fern-sdk-group-name:
        - ticketTypes
      x-fern-sdk-method-name: get
      x-fern-request-name: FindTicketTypeRequest
    put:
      x-fern-sdk-group-name:
        - ticketTypes
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateTicketTypeRequest
  /ticket_types/{ticket_type_id}/attributes:
    post:
      x-fern-sdk-group-name:
        - ticketTypes
        - attributes
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateTicketTypeAttributeRequest
  /ticket_types/{ticket_type_id}/attributes/{attribute_id}:
    put:
      x-fern-sdk-group-name:
        - ticketTypes
        - attributes
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateTicketTypeAttributeRequest
  /tickets:
    post:
      x-fern-sdk-group-name:
        - tickets
      x-fern-sdk-method-name: create
      x-fern-request-name: CreateTicketRequest
  /tickets/{ticket_id}:
    get:
      x-fern-sdk-group-name:
        - tickets
      x-fern-sdk-method-name: get
      x-fern-request-name: FindTicketRequest
    put:
      x-fern-sdk-group-name:
        - tickets
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateTicketRequest
  /tickets/{ticket_id}/reply:
    post:
      requestBody:
        content:
          application/json:
            examples:
              admin_quick_reply_reply:
                summary: null
              user_reply:
                summary: null
              admin_note_reply:
                summary: null
      x-fern-sdk-group-name:
        - tickets
      x-fern-sdk-method-name: reply
      x-fern-request-name: ReplyToTicketRequest
  /tickets/{ticket_id}/tags:
    post:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: tagTicket
      x-fern-request-name: TagTicketRequest
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  x-fern-property-name: tag_id
  /tickets/{ticket_id}/tags/{tag_id}:
    delete:
      x-fern-sdk-group-name:
        - tags
      x-fern-sdk-method-name: untagTicket
      x-fern-request-name: UntagTicketRequest
  /tickets/search:
    post:
      x-fern-pagination:
        cursor: $request.pagination.starting_after
        next_cursor: $response.pages.next.starting_after
        results: $response.tickets
      x-fern-sdk-group-name:
        - tickets
      x-fern-sdk-method-name: search
      x-fern-request-name: SearchTicketsRequest
  /visitors:
    get:
      x-fern-sdk-group-name:
        - visitors
      x-fern-sdk-method-name: find
      x-fern-request-name: FindVisitorRequest
    put:
      x-fern-sdk-group-name:
        - visitors
      x-fern-sdk-method-name: update
      x-fern-request-name: UpdateVisitorRequest
  /visitors/convert:
    post:
      x-fern-sdk-group-name:
        - visitors
      x-fern-sdk-method-name: mergeToContact
      x-fern-request-name: MergeVisitorToContactRequest
components:
  schemas:
    intercom_version:
      x-fern-ignore: true
    single_filter_search_request:
      properties:
        operator:
          x-fern-enum:
            "=":
              name: Equals
            "!=":
              name: NotEquals
            IN:
              name: In
            NIN:
              name: NotIn
            "<":
              name: LessThan
            ">":
              name: GreaterThan
            "~":
              name: Contains
            "!~":
              name: DoesNotContain
            "^":
              name: StartsWith
            "$":
              name: EndsWith
    create_contact_request:
      properties: null
      anyOf:
        - x-fern-type-name: CreateContactRequestWithEmail
          title: Create contact with email
          properties:
            email:
              type: string
              description: The contacts email
              example: jdoe@example.com
            phone:
              type: string
              nullable: true
              description: The contacts phone
              example: "+353871234567"
            name:
              type: string
              nullable: true
              description: The contacts name
              example: John Doe
            avatar:
              type: string
              nullable: true
              description: An image URL containing the avatar of a contact
              example: https://www.example.com/avatar_image.jpg
            signed_up_at:
              type: integer
              format: date-time
              nullable: true
              description: The time specified for when a contact signed up
              example: 1571672154
            last_seen_at:
              type: integer
              format: date-time
              nullable: true
              description:
                The time when the contact was last seen (either where the Intercom
                Messenger was installed or when specified manually)
              example: 1571672154
            owner_id:
              type: integer
              nullable: true
              description:
                The id of an admin that has been assigned account ownership
                of the contact
              example: 123
            unsubscribed_from_emails:
              type: boolean
              nullable: true
              description: Whether the contact is unsubscribed from emails
              example: true
            custom_attributes:
              type: object
              nullable: true
              description: The custom attributes which are set for the contact
          required:
            - email
        - x-fern-type-name: CreateContactRequestWithExternalId
          title: Create contact with external_id
          properties:
            external_id:
              type: string
              description: A unique identifier for the contact which is given to Intercom
            phone:
              type: string
              nullable: true
              description: The contacts phone
              example: "+353871234567"
            name:
              type: string
              nullable: true
              description: The contacts name
              example: John Doe
            avatar:
              type: string
              nullable: true
              description: An image URL containing the avatar of a contact
              example: https://www.example.com/avatar_image.jpg
            signed_up_at:
              type: integer
              format: date-time
              nullable: true
              description: The time specified for when a contact signed up
              example: 1571672154
            last_seen_at:
              type: integer
              format: date-time
              nullable: true
              description:
                The time when the contact was last seen (either where the Intercom
                Messenger was installed or when specified manually)
              example: 1571672154
            owner_id:
              type: integer
              nullable: true
              description:
                The id of an admin that has been assigned account ownership
                of the contact
              example: 123
            unsubscribed_from_emails:
              type: boolean
              nullable: true
              description: Whether the contact is unsubscribed from emails
              example: true
            custom_attributes:
              type: object
              nullable: true
              description: The custom attributes which are set for the contact
          required:
            - external_id
        - x-fern-type-name: CreateContactRequestWithRole
          title: Create contact with role
          properties:
            role:
              type: string
              description: The role of the contact.
            phone:
              type: string
              nullable: true
              description: The contacts phone
              example: "+353871234567"
            name:
              type: string
              nullable: true
              description: The contacts name
              example: John Doe
            avatar:
              type: string
              nullable: true
              description: An image URL containing the avatar of a contact
              example: https://www.example.com/avatar_image.jpg
            signed_up_at:
              type: integer
              format: date-time
              nullable: true
              description: The time specified for when a contact signed up
              example: 1571672154
            last_seen_at:
              type: integer
              format: date-time
              nullable: true
              description:
                The time when the contact was last seen (either where the Intercom
                Messenger was installed or when specified manually)
              example: 1571672154
            owner_id:
              type: integer
              nullable: true
              description:
                The id of an admin that has been assigned account ownership
                of the contact
              example: 123
            unsubscribed_from_emails:
              type: boolean
              nullable: true
              description: Whether the contact is unsubscribed from emails
              example: true
            custom_attributes:
              type: object
              nullable: true
              description: The custom attributes which are set for the contact
          required:
            - role
    create_data_event_request:
      properties: null
      anyOf:
        - x-fern-type-name: CreateDataEventRequestWithId
          title: id required
          properties:
            id:
              type: string
              description:
                The unique identifier for the contact (lead or user) which
                is given by Intercom.
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
            user_id: null
            email: null
            event_name:
              type: string
              description:
                The name of the event that occurred. This is presented to your
                App's admins when filtering and creating segments - a good event name
                is typically a past tense 'verb-noun' combination, to improve readability,
                for example `updated-plan`.
              example: invited-friend
            created_at:
              type: integer
              format: date-time
              description: The time the event occurred as a UTC Unix timestamp
              example: 1671028894
            metadata:
              type: object
              description: Optional metadata about the event.
              additionalProperties:
                type: string
              example:
                invite_code: ADDAFRIEND
          required:
            - event_name
            - created_at
            - id
        - x-fern-type-name: CreateDataEventRequestWithUserId
          title: user_id required
          properties:
            user_id:
              type: string
              description: Your identifier for the user.
              example: "314159"
            id: null
            email: null
            event_name:
              type: string
              description:
                The name of the event that occurred. This is presented to your
                App's admins when filtering and creating segments - a good event name
                is typically a past tense 'verb-noun' combination, to improve readability,
                for example `updated-plan`.
              example: invited-friend
            created_at:
              type: integer
              format: date-time
              description: The time the event occurred as a UTC Unix timestamp
              example: 1671028894
            metadata:
              type: object
              description: Optional metadata about the event.
              additionalProperties:
                type: string
              example:
                invite_code: ADDAFRIEND
          required:
            - event_name
            - created_at
            - user_id
        - x-fern-type-name: CreateDataEventRequestWithEmail
          title: email required
          properties:
            email:
              type: string
              description:
                An email address for your user. An email should only be used
                where your application uses email to uniquely identify users.
              example: frodo.baggins@example.com
            user_id: null
            id: null
            event_name:
              type: string
              description:
                The name of the event that occurred. This is presented to your
                App's admins when filtering and creating segments - a good event name
                is typically a past tense 'verb-noun' combination, to improve readability,
                for example `updated-plan`.
              example: invited-friend
            created_at:
              type: integer
              format: date-time
              description: The time the event occurred as a UTC Unix timestamp
              example: 1671028894
            metadata:
              type: object
              description: Optional metadata about the event.
              additionalProperties:
                type: string
              example:
                invite_code: ADDAFRIEND
          required:
            - event_name
            - created_at
            - email
    create_message_request:
      properties: null
      anyOf:
        - x-fern-type-name: CreateMessageRequestWithEmail
          title: "message_type: `email`."
          properties:
            message_type:
              type: string
              description: "The kind of message being created."
              enum:
                - email
              example: email
            subject:
              type: string
              description: The title of the email.
              example: Thanks for everything
            body:
              type: string
              description: The content of the message. HTML and plaintext are supported.
              example: Hello there
            template:
              type: string
              description:
                The style of the outgoing message. Possible values `plain`
                or `personal`.
              example: plain
            from:
              x-fern-type-name: CreateMessageRequestFrom
              type: object
              description:
                The sender of the message. If not provided, the default sender
                will be used.
              properties:
                type:
                  type: string
                  description: Always `admin`.
                  enum:
                    - admin
                  example: admin
                id:
                  type: integer
                  description: The identifier for the admin which is given by Intercom.
                  example: 394051
              required:
                - type
                - id
            to:
              x-fern-type-name: CreateMessageRequestTo
              type: object
              description:
                The sender of the message. If not provided, the default sender
                will be used.
              properties:
                type:
                  x-fern-type-name: CreateMessageRequestType
                  type: string
                  description: The role associated to the contact - `user` or `lead`.
                  enum:
                    - user
                    - lead
                  example: user
                id:
                  type: string
                  description: The identifier for the contact which is given by Intercom.
                  example: 536e564f316c83104c000020
              required:
                - type
                - id
            created_at:
              type: integer
              description:
                The time the message was created. If not provided, the current
                time will be used.
              example: 1590000000
            create_conversation_without_contact_reply:
              type: boolean
              description:
                Whether a conversation should be opened in the inbox for the
                message without the contact replying. Defaults to false if not provided.
              default: false
              example: true
          required:
            - message_type
            - subject
            - body
            - template
            - from
            - to
        - x-fern-type-name: CreateMessageRequestWithInapp
          title: "message_type: `inapp`."
          properties:
            message_type:
              type: string
              description: "The kind of message being created."
              enum:
                - inapp
              example: inapp
            subject:
              type: string
              description: The title of the email.
              example: Thanks for everything
            body:
              type: string
              description: The content of the message. HTML and plaintext are supported.
              example: Hello there
            template:
              type: string
              description:
                The style of the outgoing message. Possible values `plain`
                or `personal`.
              example: plain
            from:
              x-fern-type-name: CreateMessageRequestFrom
              type: object
              description:
                The sender of the message. If not provided, the default sender
                will be used.
              properties:
                type:
                  type: string
                  description: Always `admin`.
                  enum:
                    - admin
                  example: admin
                id:
                  type: integer
                  description: The identifier for the admin which is given by Intercom.
                  example: 394051
              required:
                - type
                - id
            to:
              x-fern-type-name: CreateMessageRequestTo
              type: object
              description:
                The sender of the message. If not provided, the default sender
                will be used.
              properties:
                type:
                  x-fern-type-name: CreateMessageRequestType
                  type: string
                  description: The role associated to the contact - `user` or `lead`.
                  enum:
                    - user
                    - lead
                  example: user
                id:
                  type: string
                  description: The identifier for the contact which is given by Intercom.
                  example: 536e564f316c83104c000020
              required:
                - type
                - id
            created_at:
              type: integer
              description:
                The time the message was created. If not provided, the current
                time will be used.
              example: 1590000000
            create_conversation_without_contact_reply:
              type: boolean
              description:
                Whether a conversation should be opened in the inbox for the
                message without the contact replying. Defaults to false if not provided.
              default: false
              example: true
          required:
            - message_type
            - body
            - from
            - to
    convert_visitor_request:
      properties:
        user:
          properties: null
          anyOf:
            - x-fern-type-name: UserWithId
              properties:
                id:
                  type: string
                  description:
                    The unique identifier for the contact which is given by
                    Intercom.
                  example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
                user_id: null
                email:
                  type: string
                  description: The contact's email, retained by default if one is present.
                  example: winstonsmith@truth.org
              required:
                - id
            - x-fern-type-name: UserWithUserId
              properties:
                id: null
                user_id:
                  type: string
                  description: A unique identifier for the contact which is given to Intercom.
                  example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
                email:
                  type: string
                  description: The contact's email, retained by default if one is present.
                  example: winstonsmith@truth.org
              required:
                - user_id
        visitor:
          properties: null
          anyOf:
            - x-fern-type-name: VisitorWithId
              properties:
                id:
                  type: string
                  description:
                    The unique identifier for the contact which is given by
                    Intercom.
                  example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
                user_id: null
                email: null
              required:
                - id
            - x-fern-type-name: VisitorWithUserId
              properties:
                id: null
                user_id:
                  type: string
                  description: A unique identifier for the contact which is given to Intercom.
                  example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
                email: null
              required:
                - user_id
            - x-fern-type-name: VisitorWithEmail
              properties:
                id: null
                user_id: null
                email:
                  type: string
                  description: The visitor's email.
                  example: winstonsmith@truth.org
              required:
                - email
    update_visitor_request:
      properties: null
      anyOf:
        - x-fern-type-name: UpdateVisitorRequestWithId
          properties:
            id:
              type: string
              description: A unique identified for the visitor which is given by Intercom.
              example: 8a88a590-e
            user_id: null
            name:
              type: string
              description: The visitor's name.
              example: Christian Bale
            custom_attributes:
              type: object
              description: The custom attributes which are set for the visitor.
              additionalProperties:
                type: string
              example:
                paid_subscriber: true
                monthly_spend: 155.5
                team_mates: 9
          required:
            - id
        - x-fern-type-name: UpdateVisitorRequestWithUserId
          properties:
            id: null
            user_id:
              type: string
              description: A unique identified for the visitor which is given by you.
              example: "123"
            name:
              type: string
              description: The visitor's name.
              example: Christian Bale
            custom_attributes:
              type: object
              description: The custom attributes which are set for the visitor.
              additionalProperties:
                type: string
              example:
                paid_subscriber: true
                monthly_spend: 155.5
                team_mates: 9
          required:
            - user_id
    merge_contacts_request:
      properties:
        from:
          x-fern-property-name: lead_id
        into:
          x-fern-property-name: contact_id
    custom_attributes:
      title: Custom atttributes
      type: object
      description: Custom data set for this data.
      example:
        monthly_spend: '155.5'

    # enum additions
    contact:
      properties:
        type:
          enum:
            - contact
        avatar:
          properties: null
          type: string
          format: uri
          description: An image URL containing the avatar of a contact.
          example: https://example.org/128Wash.jpg
    content_source:
      properties:
        content_type:
          enum:
            - custom_answer
    create_article_request:
      properties:
        parent_type:
          enum:
            - collection
            - section
    error:
      properties:
        type:
          enum:
            - error.list
    social_profile:
      properties:
        type:
          enum:
            - social_profile
    subscription_type:
      properties:
        type:
          enum:
            - subscription
    tag:
      properties:
        type:
          enum:
            - tag
      # The spec incorrectly labels applied_at and applied_by as required
      required:
        - type
        - id
        - name
    ticket_custom_attributes:
      x-fern-type: map<string, unknown>
    ticket_request_custom_attributes:
      x-fern-type: map<string, unknown>
    ticket_type_attribute:
      properties:
        data_type:
          enum:
            - string
            - list
            - integer
            - decimal
            - boolean
            - datetime
            - files
    update_article_request_body:
      properties:
        parent_type:
          enum:
            - collection
            - section
    visitor:
      properties:
        custom_attributes:
          additionalProperties: true
        type:
          enum:
            - visitor

    # change teammates.teammates to teammates.admins
    conversation_teammates:
      properties:
        type:
          enum:
            - admin.list
        teammates: null
        admins:
          type: array
          description: The list of teammates who participated in the conversation
            (wrote at least one conversation part).
          items:
            "$ref": "#/components/schemas/reference"
      required:
        - type
        - admins

    # changing Record<string, string> to Record<string, unknown> wherever possible
    company:
      properties:
        custom_attributes:
          additionalProperties: true
      # The spec incorrectly labels last_request_at, remote_created_at, size, website, and industry as required
      required:
        - company_id
        - id
        - app_id
        - name
        - created_at
        - updated_at
        - monthly_spend
        - session_count
        - user_count
    create_or_update_company_request:
      properties:
        custom_attributes:
          additionalProperties: true

    # adding offset pages
    offset_pages:
      title: Offset based pages
      type: object
      properties:
        type:
          type: string
          description: the type of object `offset_pages`
          example: offset_pages
          enum:
            - offset_pages
        page:
          type: integer
          description: The current offset
          example: 1
        next:
          type: string
          nullable: true
        per_page:
          type: integer
          description: Number of results per page
          example: 2
        total_pages:
          type: integer
          description: Total number of pages
          example: 13
      required:
        - type
    collection_list:
      properties:
        pages:
          "$ref": "#/components/schemas/offset_pages"
    article_list:
      properties:
        pages:
          "$ref": "#components/schemas/offset_pages"
    company_list:
      properties:
        pages:
          "$ref": "#/components/schemas/offset_pages"
    note_list:
      properties:
        pages:
    # The spec incorrectly labels job_title as required
    admin:
      required:
        - id
        - name
        - email
        - away_mode_enabled
        - away_mode_reassign
        - has_inbox_seat
        - team_ids
    # The spec incorrectly labels default_locale and translated_content as required
    article_list_item:
      required:
        - id
        - workspace_id
        - title
        - description
        - body
        - author_id
        - state
        - created_at
        - updated_at
        - url
        - parent_id
        - parent_type
        - statistics

    # The spec incorrectly labels conversions as required
    article_statistics:
      required:
        - type
        - views
        - reactions
        - happy_reaction_percentage
        - neutral_reaction_percentage
        - sad_reaction_percentage

    # The spec incorrectly labels description as required
    data_attribute:
      required:
        - type
        - name
        - full_name
        - label
        - data_type

    # The spec incorrectly labels type, email, intercom_user_id, and user_id as required
    data_event_summary:
      required:
        - events

    # The spec incorrectly labels default_locale as required
    collection:
      required:
        - id
        - workspace_id
        - name
        - created_at
        - order

    create_ticket_request:
      x-fern-type-name: CreateTicketRequestBody
      properties:
        ticket_attributes: null
    update_article_request:
      x-fern-type-name: UpdateArticleRequestBody
      # TODO: fern-support
      # Remove nullable: false once java generator updated to handle this case.
      nullable: false
    update_data_attribute_request:
      x-fern-type-name: UpdateDataAttributeRequestBody
    update_internal_article_request:
      x-fern-type-name: UpdateInternalArticleRequestBody
      # TODO: fern-support
      # Remove nullable: false once java generator updated to handle this case.
      nullable: false
    update_ticket_type_request:
      x-fern-type-name: UpdateTicketTypeRequestBody
      # TODO: fern-support
      # Remove nullable: false once java generator updated to handle this case.
      nullable: false

  securitySchemes:
    bearerAuth:
      x-fern-bearer:
        env: INTERCOM_API_KEY

x-fern-version:
  header:
    name: version
    value: Intercom-Version
  default: "2.11"
  values:
    - "1.0"
    - "1.1"
    - "1.2"
    - "1.3"
    - "1.4"
    - "2.0"
    - "2.1"
    - "2.2"
    - "2.3"
    - "2.4"
    - "2.5"
    - "2.6"
    - "2.7"
    - "2.8"
    - "2.9"
    - "2.10"
    - "2.11"
    - "Unstable"

servers:
  - url: https://api.intercom.io/
    x-fern-server-name: USProduction
  - url: https://api.eu.intercom.io/
    x-fern-server-name: EUProduction
  - url: https://api.au.intercom.io/
    x-fern-server-name: AUProduction
